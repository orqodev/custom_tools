import hou

def componentoutput_custom_creation(node_name="componentoutput_custom",parent_path="/stage"):
    hou_parent = hou.node(parent_path)

    # Code for /stage/componentoutput_custom
    hou_node = hou_parent.createNode("componentoutput", node_name, run_init_scripts=False, load_contents=False, exact_type_name=True)
    hou_node.move(hou.Vector2(1.1296, 1.60048))
    hou_node.hide(False)
    hou_node.setSelected(True)

    # Code for /stage/componentoutput_custom/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/mode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("mode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rootprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("rootprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/$OS")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/kind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("kind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("component")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__name parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("__name")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`ifs(ch(\"mode\")==0,chs(\"IN/inputname\"),chs(\"name\"))`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setdefaultvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("setdefaultvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variantdefaultgeo parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("variantdefaultgeo")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("with_landing_gear")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/variantdefaultmtl parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("variantdefaultmtl")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("2k")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/doclassinherit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("doclassinherit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariantsinside parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("setvariantsinside")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payloadinputprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("payloadinputprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/dogeoinstance parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("dogeoinstance")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setinstanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("setinstanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setassetidentifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("setassetidentifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/assetidentifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("assetidentifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"lopoutput\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setassetname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("setassetname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/assetname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("assetname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"rootprim\"),\"/\",\"\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setassetversion parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("setassetversion")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/assetversion parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("assetversion")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setassetdependencies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("setassetdependencies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/assetdependencies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("assetdependencies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/seticon parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("seticon")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/icon parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("icon")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loadfromdisk parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("loadfromdisk")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/execute parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("execute")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/executebackground parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("executebackground")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/addtogallery parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("addtogallery")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/name parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("name")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"rootprim\"),\"/\",\"\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/filename parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("filename")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"name\")`.usd")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/lopoutput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("lopoutput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/home/tushita/usd/assets/KB3D_MTM_Asset_M/`chs(\"filename\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payloadlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("payloadlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("./data/`$HIPNAME`/payload.usdc")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/geolayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("geolayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("./data/`$HIPNAME`/geo.usdc")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/mtllayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("mtllayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("./data/`$HIPNAME`/mtl.usdc")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extralayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("extralayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("./data/`$HIPNAME`/extra.usdc")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manualpayloadlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("manualpayloadlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("./data/`$HIPNAME`/payload.usdc")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variantlayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("variantlayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/localize parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("localize")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/localizesubdir parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("localizesubdir")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("textures")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/saverecipe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("saverecipe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/recipeoutput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("recipeoutput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HIP/usd/assets/`chs(\"name\")`/`chs(\"name\")`_source.hda")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/recipename parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("recipename")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"name\")`_source_recipe")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("y")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder9 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder9")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variantlayersset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("variantlayersset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("geo")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variantlayersdir parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("variantlayersdir")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("variants")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/savestyle parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("savestyle")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("flattenimplicitlayers")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/striplayerbreaks parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("striplayerbreaks")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/fileperframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("fileperframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/layermetadata_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("layermetadata_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/requiredefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("requiredefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/savetimeinfo parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("savetimeinfo")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clearhoudinicustomdata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("clearhoudinicustomdata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensuremetricsset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("ensuremetricsset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/contextoptions_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("contextoptions_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/optioncount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("optioncount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/tprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("tprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/prerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("prerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/lprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("lprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/tpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("tpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/preframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("preframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/lpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("lpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/tpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("tpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/postframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("postframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/lpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("lpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/tpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("tpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/postrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("postrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/lpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("lpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("python")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/initsim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("initsim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/alfprogress parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("alfprogress")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reportnetwork parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("reportnetwork")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/executegl parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("executegl")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/executerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("executerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/executefile parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("executefile")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/executeviewport parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("executeviewport")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/executesavethumbnail parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("executesavethumbnail")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnailmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("thumbnailmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/renderer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("renderer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("BRAY_HdKarmaXPU")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnailfile parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("thumbnailfile")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/autothumbnail parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("autothumbnail")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/res parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm_tuple = hou_node.parmTuple("res")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((256, 256))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/thumbnailscenesource parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("thumbnailscenesource")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnailexportlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("thumbnailexportlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder8 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder8")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/viewthumbnailcam parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("viewthumbnailcam")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/spin parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("spin")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/pitch parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("pitch")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/dist parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("dist")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/folder10 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("folder10")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnailinputcamera parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("thumbnailinputcamera")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnailquicksetup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("thumbnailquicksetup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/optiongroup1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("optiongroup1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/optionenable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("optionenable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/optionname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("optionname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/optiontype1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("optiontype1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("string")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/optionstrvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("optionstrvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/optionfloatvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}")
    hou_parm = hou_node.parm("optionfloatvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    # Code to establish connections for /stage/componentoutput_custom
    hou_node = hou_parent.node(node_name)
    if hou_parent.node("KB3D_MTM_Asset_M_component_material") is not None:
        hou_node.setInput(0, hou_parent.node("KB3D_MTM_Asset_M_component_material"), 0)
    hou_node.setUserData("___Version___", "")
    hou_node.setUserData("nodeshape", "bulge_down")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Update the parent node.
    hou_parent = hou_node

    # Initialize parent node variable.
    if locals().get("hou_parent") is None:
        hou_parent = hou.node(f"/stage/{node_name}")

    # Code for /stage/componentoutput_custom/__stickynote1
    hou_sticky = hou_parent.createStickyNote("__stickynote1")
    hou_sticky.setText("extentsHint could vary per geometry variant, so we're lofting for each geo variant detected.\n\nIn the future, will probably want to setup something on the Component Geometry nodes, for generating draw modes individually, and then be able to control them all here, to generate texture cards or other draw mode attributes which vary per-attribute as well.")
    hou_sticky.setTextSize(0)
    hou_sticky.setTextColor(hou.Color((0, 0, 0)))
    hou_sticky.setDrawBackground(True)
    hou_sticky.setPosition(hou.Vector2(14.1548, -20.1638))
    hou_sticky.setSize(hou.Vector2(4.3956, 3.50874))
    hou_sticky.setMinimized(False)
    hou_sticky.setSelected(False)
    hou_sticky.setColor(hou.Color([1, 0.725, 0]))

    # Initialize parent node variable.
    if locals().get("hou_parent") is None:
        hou_parent = hou.node(f"/stage/{node_name}")

    # Code for /stage/componentoutput_custom/__stickynote3
    hou_sticky = hou_parent.createStickyNote("__stickynote3")
    hou_sticky.setText("Deconstruct the Scene Import, but we error if there is more than one component/payload.")
    hou_sticky.setTextSize(0)
    hou_sticky.setTextColor(hou.Color((0, 0, 0)))
    hou_sticky.setDrawBackground(True)
    hou_sticky.setPosition(hou.Vector2(26.2132, -14.7425))
    hou_sticky.setSize(hou.Vector2(4.21638, 1.83002))
    hou_sticky.setMinimized(False)
    hou_sticky.setSelected(False)
    hou_sticky.setColor(hou.Color([1, 0.969, 0.522]))

    # Code for /stage/componentoutput_custom/OUT
    hou_node = hou_parent.createNode("output", "OUT", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(0.637754, -52.6319))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/OUT/outputidx parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/OUT")
    hou_parm = hou_node.parm("outputidx")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/OUT/modifiedprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/OUT")
    hou_parm = hou_node.parm("modifiedprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/asset_layer
    hou_node = hou_parent.createNode("configurelayer", "asset_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-1.82086, -48.402))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/asset_layer/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rop/lopoutput\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`ifs(ch(\"../mode\")>=1, chs(\"../rootprim\"), chs(\"../IN/inputroot\"))`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/asset_layer/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/asset_layer/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/asset_layer/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/asset_layer/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/asset_layer/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/asset_layer")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/from_disk
    hou_node = hou_parent.createNode("sublayer", "from_disk", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(3.0927, -47.8709))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/from_disk/parentlayer_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("parentlayer_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/loadpayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("loadpayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("auto")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/editrootlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("editrootlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/findsublayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("findsublayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/removefoundsublayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("removefoundsublayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/sublayertype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("sublayertype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("files")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../handlemissingfiles\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../handlemissingfiles\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../handlemissingfiles\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../handlemissingfiles\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/from_disk/positiontype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("positiontype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("strongest")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/positionindex parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("positionindex")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../reload\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../reload\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../reload\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../reload\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/from_disk/enable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("enable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/sublayerfile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("sublayerfile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"../rop/lopoutput\"),\":SDF_FORMAT_ARGS:format=usda\",\"\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/mute1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("mute1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/from_disk/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/from_disk")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/output_switch
    hou_node = hou_parent.createNode("switch", "output_switch", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(0.637754, -51.2975))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/output_switch/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/output_switch")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/output_switch/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/output_switch")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../loadfromdisk\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../loadfromdisk\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../loadfromdisk\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../loadfromdisk\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/output_switch/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/output_switch")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/output_switch/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/output_switch")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/output_switch/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/output_switch")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/output_switch/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/output_switch")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/output_switch/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/output_switch")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/output_switch/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/output_switch")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/source_mode
    hou_node = hou_parent.createNode("switch", "source_mode", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(0.637749, -33.1359))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/source_mode/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/source_mode")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/source_mode/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/source_mode")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../mode\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../mode\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../mode\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../mode\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/source_mode/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/source_mode")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/source_mode/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/source_mode")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/source_mode/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/source_mode")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/source_mode/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/source_mode")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/source_mode/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/source_mode")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/source_mode/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/source_mode")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/fetch_geo
    hou_node = hou_parent.createNode("fetch", "fetch_geo", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(6.60721, 3.63124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/fetch_geo/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/fetch_geo")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:geo:lastnode\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:geo:lastnode\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:geo:lastnode\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:geo:lastnode\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/configure_geo_layer
    hou_node = hou_parent.createNode("configurelayer", "configure_geo_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(6.60721, -1.36876))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/configure_geo_layer/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../geolayer\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_geo_layer/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("layer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_geo_layer/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_geo_layer")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/fetch_mtls
    hou_node = hou_parent.createNode("fetch", "fetch_mtls", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(14.1013, 3.63124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/fetch_mtls/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/fetch_mtls")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:mtl:lastnode\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:mtl:lastnode\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:mtl:lastnode\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:mtl:lastnode\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/configure_mtl_layer
    hou_node = hou_parent.createNode("configurelayer", "configure_mtl_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(14.1013, -1.36876))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/configure_mtl_layer/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../mtllayer\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_mtl_layer/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_mtl_layer")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/loftpayloadinfo1
    hou_node = hou_parent.createNode("loftpayloadinfo", "loftpayloadinfo1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-4.19527, -24.2861))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("timedep")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/setstats parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("setstats")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/setcountstats parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("setcountstats")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/num_colors parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("num_colors")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/setcolor1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm = hou_node.parm("setcolor1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo1/color1 parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo1")
    hou_parm_tuple = hou_node.parmTuple("color1")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 1, 1))
    hou_parm_tuple.setAutoscope((False, False, False))


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/manual_prim
    hou_node = hou_parent.createNode("primitive", "manual_prim", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-17.7221, -13.6153))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/manual_prim/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_prim")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_prim/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_prim")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../kind\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_prim/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_prim")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_prim/primtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_prim")
    hou_parm = hou_node.parm("primtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_prim/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_prim")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/default_variants
    hou_node = hou_parent.createNode("setvariant", "default_variants", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(7.81046, -28.4333))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/default_variants/num_variants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("num_variants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/primpattern1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("primpattern1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/variantsetuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantsetuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/variantset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs():\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n    if not value:\n        value = \"\"\n\nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs():\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n    if not value:\n        value = \"\"\n\nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs():\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n    if not value:\n        value = \"\"\n\nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs():\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n    if not value:\n        value = \"\"\n\nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/default_variants/variantsetindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantsetindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/variantnameuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantnameuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/variantname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("with_landing_gear")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../variantdefaultgeo\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../variantdefaultgeo\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../variantdefaultgeo\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../variantdefaultgeo\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/default_variants/variantnameindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantnameindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/enable2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("enable2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/primpattern2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("primpattern2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/variantsetuseindex2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantsetuseindex2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/variantset2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantset2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs():\n    value = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n    if not value:\n        value = \"\"\n    \nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs():\n    value = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n    if not value:\n        value = \"\"\n    \nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs():\n    value = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n    if not value:\n        value = \"\"\n    \nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs():\n    value = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n    if not value:\n        value = \"\"\n    \nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/default_variants/variantsetindex2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantsetindex2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/variantnameuseindex2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantnameuseindex2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/default_variants/variantname2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantname2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("2k")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../variantdefaultmtl\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../variantdefaultmtl\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../variantdefaultmtl\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../variantdefaultmtl\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/default_variants/variantnameindex2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/default_variants")
    hou_parm = hou_node.parm("variantnameindex2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/payload
    hou_node = hou_parent.createNode("reference", "payload", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(5.00786, -18.9751))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/payload/destinationprim_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("destinationprim_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../kind\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inputpayload")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/referencefile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("referencefile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/setup_class_prim
    hou_node = hou_parent.createNode("switch", "setup_class_prim", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(0.637754, -38.8247))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/setup_class_prim/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_class_prim")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_class_prim/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_class_prim")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../doclassinherit\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../doclassinherit\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../doclassinherit\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../doclassinherit\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_class_prim/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_class_prim")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_class_prim/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_class_prim")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_class_prim/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_class_prim")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_class_prim/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_class_prim")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_class_prim/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_class_prim")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_class_prim/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_class_prim")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/has_geo_variants
    hou_node = hou_parent.createNode("switch", "has_geo_variants", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-7.85579, -29.4755))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/has_geo_variants/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/has_geo_variants")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/has_geo_variants/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/has_geo_variants")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\nresult = 0\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node:\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\nif value:\n    result = 1\nreturn result", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\nresult = 0\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node:\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\nif value:\n    result = 1\nreturn result", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\nresult = 0\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node:\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\nif value:\n    result = 1\nreturn result", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\nresult = 0\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node:\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\nif value:\n    result = 1\nreturn result", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/has_geo_variants/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/has_geo_variants")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/has_geo_variants/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/has_geo_variants")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/has_geo_variants/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/has_geo_variants")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/has_geo_variants/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/has_geo_variants")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/has_geo_variants/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/has_geo_variants")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/has_geo_variants/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/has_geo_variants")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_begin
    hou_node = hou_parent.createNode("begincontextoptionsblock", "foreach_geo_variant_loft_payload_begin", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-4.19367, -21.1799))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_begin/layerbreak parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_begin")
    hou_parm = hou_node.parm("layerbreak")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setColor(hou.Color([1, 0.725, 0]))
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end
    hou_node = hou_parent.createNode("foreach", "foreach_geo_variant_loft_payload_end", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-6.27642, -28.5498))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/itermethod parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("itermethod")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("variants_first")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/iterations parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("iterations")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/allowinstanceproxies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("allowinstanceproxies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("None")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node:\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n\nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node:\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n\nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node:\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n\nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvalue = \"\"\n\nthis_node = hou.pwd()\ninput_node = this_node.node(\"../IN\")\nif input_node:\n    value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n\nreturn str(value)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/strings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("strings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/combineiterations parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("combineiterations")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("flattenintoinputlayer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/striplayerbreaks parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("striplayerbreaks")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/lastmodifiedfromiteration parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("lastmodifiedfromiteration")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/iterationname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("iterationname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ITERATION")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/iterationcountname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("iterationcountname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("NUMITERATIONS")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/valuename parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("valuename")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("GEO_VARIANT")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/iterrange parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("iterrange")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("all")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/firstiteration parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("firstiteration")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end/lastiteration parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/foreach_geo_variant_loft_payload_end")
    hou_parm = hou_node.parm("lastiteration")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setColor(hou.Color([1, 0.725, 0]))
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/setvariant
    hou_node = hou_parent.createNode("setvariant", "setvariant", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-4.19527, -22.2199))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/setvariant/num_variants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("num_variants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariant/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariant/primpattern1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("primpattern1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../foreach_geo_variant_loft_payload_end/primpattern\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariant/variantsetuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("variantsetuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariant/variantset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("variantset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../foreach_geo_variant_loft_payload_end/variantset\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariant/variantsetindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("variantsetindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariant/variantnameuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("variantnameuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariant/variantname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("variantname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`@GEO_VARIANT`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setvariant/variantnameindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setvariant")
    hou_parm = hou_node.parm("variantnameindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/layerbreak
    hou_node = hou_parent.createNode("layerbreak", "layerbreak", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-4.19317, -23.2546))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/class_prim
    hou_node = hou_parent.createNode("primitive", "class_prim", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(3.19916, -36.3814))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/class_prim/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/class_prim")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/__class__`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/class_prim/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/class_prim")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/class_prim/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/class_prim")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/class_prim/primtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/class_prim")
    hou_parm = hou_node.parm("primtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/class_prim/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/class_prim")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("class")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/reference1
    hou_node = hou_parent.createNode("reference", "reference1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(3.19791, -37.5907))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/reference1/destinationprim_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("destinationprim_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inherit")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/referencefile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("referencefile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../class_prim/primpath\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference1/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference1")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras
    hou_node = hou_parent.createNode("subnet", "extras", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(8.06464, -10.6061))
    hou_node.hide(False)
    hou_node.setSelected(False)
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node

    # Code for /stage/componentoutput_custom/extras/output0
    hou_node = hou_parent.createNode("output", "output0", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-2.28658, -7.9027))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/extras/output0/outputidx parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/output0")
    hou_parm = hou_node.parm("outputidx")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/output0/modifiedprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/output0")
    hou_parm = hou_node.parm("modifiedprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims(\".\", 0)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras/variantblock_end1
    hou_node = hou_parent.createNode("addvariant", "variantblock_end1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-0.16136, -5.19215))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/extras/variantblock_end1/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/sourceprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("sourceprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/sourceprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("sourceprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprim('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/checkopinions parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("checkopinions")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/createoptionsblock parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("createoptionsblock")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("lgt")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/variantsetstrength parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("variantsetstrength")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/variantprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("variantprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`ifs(ch(\"sourceprim\"), chs(\"sourceprimpath\"), chs(\"primpath\"))`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/variantname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("variantname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/variantblock_end1/setvariantselection parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_end1")
    hou_parm = hou_node.parm("setvariantselection")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras/variantblock_begin1
    hou_node = hou_parent.createNode("begincontextoptionsblock", "variantblock_begin1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(1.5695, 4.04809))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/extras/variantblock_begin1/layerbreak parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/variantblock_begin1")
    hou_parm = hou_node.parm("layerbreak")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setColor(hou.Color([0.649, 0.57, 0.87]))
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras/NO_LIGHTS
    hou_node = hou_parent.createNode("null", "NO_LIGHTS", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(1.16746, -1.57048))
    hou_node.hide(False)
    hou_node.setSelected(False)
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras/LIGHTS
    hou_node = hou_parent.createNode("null", "LIGHTS", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(3.69262, -2.16035))
    hou_node.hide(False)
    hou_node.setSelected(False)
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras/graftbranches1
    hou_node = hou_parent.createNode("graftbranches", "graftbranches1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(3.69137, -0.0545482))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/extras/graftbranches1/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("__automatic__")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/makeuniquepaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("makeuniquepaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/destasparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("destasparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/frameoffsetmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("frameoffsetmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("offset")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/frameoffset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("frameoffset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/primcount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("primcount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/primgroup1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("primgroup1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/srcprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("srcprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/lights")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/dstprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("dstprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/keepposition1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("keepposition1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/graftbranches1/keepmaterial1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/graftbranches1")
    hou_parm = hou_node.parm("keepmaterial1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras/scope1
    hou_node = hou_parent.createNode("scope", "scope1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(6.3117, 4.40909))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/extras/scope1/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("single")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/extras/scope1/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/extras/scope1/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/lights")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/initforedit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("initforedit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("setdonothing")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/createprimsgroup2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("createprimsgroup2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/primcount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("primcount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/primtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("primtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/classancestor parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("classancestor")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/scope1/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/scope1")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "1.0")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("1.0")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras/setvariant1
    hou_node = hou_parent.createNode("setvariant", "setvariant1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-0.16011, -6.28496))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/extras/setvariant1/num_variants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("num_variants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/setvariant1/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/setvariant1/primpattern1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("primpattern1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/setvariant1/variantsetuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("variantsetuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/setvariant1/variantset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("variantset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("lgt")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/setvariant1/variantsetindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("variantsetindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/setvariant1/variantnameuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("variantnameuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/setvariant1/variantname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("variantname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("NO_LIGHTS")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/setvariant1/variantnameindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/setvariant1")
    hou_parm = hou_node.parm("variantnameindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras/switch1
    hou_node = hou_parent.createNode("switch", "switch1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-2.79601, -6.41232))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/extras/switch1/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/switch1")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/switch1/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/switch1")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/switch1/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/switch1")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/switch1/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/switch1")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/switch1/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/switch1")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/switch1/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/switch1")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/switch1/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/switch1")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras/switch1/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras/switch1")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code to establish connections for /stage/componentoutput_custom/extras/output0
    hou_node = hou_parent.node("output0")
    if hou_parent.node("switch1") is not None:
        hou_node.setInput(0, hou_parent.node("switch1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/extras/variantblock_end1
    hou_node = hou_parent.node("variantblock_end1")
    if len(hou_parent.indirectInputs()) > 0:
        hou_node.setInput(0, hou_parent.indirectInputs()[0])
    if hou_parent.node("NO_LIGHTS") is not None:
        hou_node.setInput(1, hou_parent.node("NO_LIGHTS"), 0)
    if hou_parent.node("LIGHTS") is not None:
        hou_node.setInput(2, hou_parent.node("LIGHTS"), 0)
    # Code to establish connections for /stage/componentoutput_custom/extras/variantblock_begin1
    hou_node = hou_parent.node("variantblock_begin1")
    if len(hou_parent.indirectInputs()) > 0:
        hou_node.setInput(0, hou_parent.indirectInputs()[0])
    # Code to establish connections for /stage/componentoutput_custom/extras/NO_LIGHTS
    hou_node = hou_parent.node("NO_LIGHTS")
    if hou_parent.node("variantblock_begin1") is not None:
        hou_node.setInput(0, hou_parent.node("variantblock_begin1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/extras/LIGHTS
    hou_node = hou_parent.node("LIGHTS")
    if hou_parent.node("graftbranches1") is not None:
        hou_node.setInput(0, hou_parent.node("graftbranches1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/extras/graftbranches1
    hou_node = hou_parent.node("graftbranches1")
    if hou_parent.node("variantblock_begin1") is not None:
        hou_node.setInput(0, hou_parent.node("variantblock_begin1"), 0)
    if hou_parent.node("scope1") is not None:
        hou_node.setInput(1, hou_parent.node("scope1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/extras/setvariant1
    hou_node = hou_parent.node("setvariant1")
    if hou_parent.node("variantblock_end1") is not None:
        hou_node.setInput(0, hou_parent.node("variantblock_end1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/extras/switch1
    hou_node = hou_parent.node("switch1")
    if len(hou_parent.indirectInputs()) > 0:
        hou_node.setInput(0, hou_parent.indirectInputs()[0])
    if hou_parent.node("setvariant1") is not None:
        hou_node.setInput(1, hou_parent.node("setvariant1"), 0)

    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/layerbreak2
    hou_node = hou_parent.createNode("layerbreak", "layerbreak2", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(8.06674, -9.58461))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/extras_layer
    hou_node = hou_parent.createNode("configurelayer", "extras_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(8.06464, -11.6161))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/extras_layer/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../extralayer\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/extras_layer/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/extras_layer/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/extras_layer/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/extras_layer/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/extras_layer/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("layer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/extras_layer/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/extras_layer")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/add_extras_layer
    hou_node = hou_parent.createNode("switch", "add_extras_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(5.54725, -14.3625))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/add_extras_layer/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_extras_layer")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/add_extras_layer/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_extras_layer")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/add_extras_layer/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_extras_layer")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/add_extras_layer/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_extras_layer")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/add_extras_layer/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_extras_layer")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/add_extras_layer/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_extras_layer")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/add_extras_layer/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_extras_layer")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/add_extras_layer/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_extras_layer")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Python)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/setup_asset_info_metadata
    hou_node = hou_parent.createNode("configureprimitive", "setup_asset_info_metadata", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(0.637754, -40.1348))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("single")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setpurpose parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setpurpose")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/purpose parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("purpose")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("default")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setproxy parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setproxy")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/proxy parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("proxy")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setinstanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setinstanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("instanceable")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setactivation parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setactivation")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/activation parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("activation")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setvisibility parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setvisibility")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/visibility parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("visibility")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inherit")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setextents parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setextents")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/extents parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("extents")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("missing")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/kind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("kind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/fixkindhierarchy parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("fixkindhierarchy")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/Schema parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("Schema")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/settype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("settype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/type parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("type")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setapischemas parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setapischemas")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/apischemas parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("apischemas")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/DrawMode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("DrawMode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setapplydrawmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setapplydrawmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/applydrawmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("applydrawmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setdrawmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setdrawmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/drawmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("drawmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("default")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setdrawmodecolor parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setdrawmodecolor")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/drawmodecolor parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm_tuple = hou_node.parmTuple("drawmodecolor")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((0.17999999999999999, 0.17999999999999999, 0.17999999999999999))
    hou_parm_tuple.setAutoscope((False, False, False))


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setcardgeometry parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setcardgeometry")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/cardgeometry parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("cardgeometry")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("cross")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setcardtexturexneg parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setcardtexturexneg")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/cardtexturexneg parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("cardtexturexneg")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HIP/tex/`rtrim(@primname,\"0123456789\")`XNeg.png")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setcardtexturexpos parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setcardtexturexpos")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/cardtexturexpos parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("cardtexturexpos")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HIP/tex/`rtrim(@primname,\"0123456789\")`XPos.png")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setcardtextureyneg parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setcardtextureyneg")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/cardtextureyneg parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("cardtextureyneg")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HIP/tex/`rtrim(@primname,\"0123456789\")`YNeg.png")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setcardtextureypos parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setcardtextureypos")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/cardtextureypos parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("cardtextureypos")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HIP/tex/`rtrim(@primname,\"0123456789\")`YPos.png")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setcardtexturezneg parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setcardtexturezneg")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/cardtexturezneg parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("cardtexturezneg")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HIP/tex/`rtrim(@primname,\"0123456789\")`ZNeg.png")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setcardtexturezpos parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setcardtexturezpos")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/cardtexturezpos parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("cardtexturezpos")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HIP/tex/`rtrim(@primname,\"0123456789\")`ZPos.png")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/AssetInfo parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("AssetInfo")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setassetidentifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setassetidentifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetidentifier\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetidentifier\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetidentifier\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetidentifier\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetidentifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetidentifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/home/tushita/usd/assets/KB3D_MTM_Asset_M/componentoutput_custom.usd")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetidentifier\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetidentifier\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetidentifier\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetidentifier\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setassetname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setassetname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("componentoutput_custom")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setassetthumbnail parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setassetthumbnail")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetthumbnail parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetthumbnail")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setassetversion parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setassetversion")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetversion\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetversion\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetversion\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetversion\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetversion parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetversion")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetversion\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetversion\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetversion\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetversion\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setassetdependencies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setassetdependencies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetdependencies\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetdependencies\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetdependencies\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setassetdependencies\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetdependencies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetdependencies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetdependencies\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetdependencies\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetdependencies\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../assetdependencies\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetinfocount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetinfocount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/Interface parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("Interface")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/seticon parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("seticon")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../seticon\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../seticon\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../seticon\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../seticon\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/icon parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("icon")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../icon\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../icon\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../icon\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../icon\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setcatalogparentpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setcatalogparentpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/catalogparentpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("catalogparentpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/seteditable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("seteditable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/editable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("editable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/setselectable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("setselectable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/selectable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("selectable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/sethideinui parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("sethideinui")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/hideinui parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("hideinui")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/CustomData parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("CustomData")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(3)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../customdatacount\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(3)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../customdatacount\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(3)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../customdatacount\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(3)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../customdatacount\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetinfogroup1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetinfogroup1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetinfoname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetinfoname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("thumbnail")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetinfotype1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetinfotype1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("asset")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetinfostrvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetinfostrvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../thumbnail_render/outputimage\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetinfofloatvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetinfofloatvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetinfointvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetinfointvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/setup_asset_info_metadata/assetinfoboolvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/setup_asset_info_metadata")
    hou_parm = hou_node.parm("assetinfoboolvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/IN
    hou_node = hou_parent.createNode("null", "IN", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-16.751, -4.85741))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("inputname", "Input Name", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template.setTags({"script_callback_language": "python"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("inputroot", "Input Root", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template.setTags({"script_callback_language": "python"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("inputvariantgeo", "Input Variant Geo", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template.setTags({"script_callback_language": "python"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("inputvariantmtl", "Input Variant Mtl", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template.setTags({"script_callback_language": "python"})
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/IN/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/IN")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("componentoutput_custom")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"name\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:name\")\n\nreturn value\n\n", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"name\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:name\")\n\nreturn value\n\n", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"name\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:name\")\n\nreturn value\n\n", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"name\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:name\")\n\nreturn value\n\n", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/IN/inputroot parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/IN")
    hou_parm = hou_node.parm("inputroot")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/IN/inputvariantgeo parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/IN")
    hou_parm = hou_node.parm("inputvariantgeo")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/componentoutput_custom")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0.0416667)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"rootprim\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n            if not value:\n                value = \"\"\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0.0416667)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"rootprim\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n            if not value:\n                value = \"\"\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0.0416667)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"rootprim\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n            if not value:\n                value = \"\"\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0.0416667)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"rootprim\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n            if not value:\n                value = \"\"\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/IN/inputvariantmtl parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/IN")
    hou_parm = hou_node.parm("inputvariantmtl")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/componentoutput_custom")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0.0416667)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"rootprim\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n            if not value:\n                value = \"\"\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0.0416667)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"rootprim\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n            if not value:\n                value = \"\"\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0.0416667)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"rootprim\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n            if not value:\n                value = \"\"\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0.0416667)
    hou_keyframe.setExpression("import loputils\n\nthis_node = hou.pwd()\nparent = this_node.parent()\nmanual = parent.evalParm(\"mode\")\nvalue = \"\"\nif manual:\n    value = parent.evalParm(\"rootprim\")\nelse:\n    if this_node.inputs():\n        input_node = this_node.inputs()[0]\n        if input_node:\n            value = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n            if not value:\n                value = \"\"\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/payload_input_primitives
    hou_node = hou_parent.createNode("switch", "payload_input_primitives", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-15.1778, -17.1947))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/payload_input_primitives/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input_primitives")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input_primitives/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input_primitives")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../payloadinputprims\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../payloadinputprims\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../payloadinputprims\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../payloadinputprims\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/payload_input_primitives/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input_primitives")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input_primitives/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input_primitives")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input_primitives/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input_primitives")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input_primitives/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input_primitives")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input_primitives/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input_primitives")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input_primitives/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input_primitives")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/manual_payload
    hou_node = hou_parent.createNode("reference", "manual_payload", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-14.4039, -15.4519))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/manual_payload/destinationprim_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("destinationprim_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inputpayload")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/referencefile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("referencefile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_payload/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_payload")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints
    hou_node = hou_parent.createNode("loftpayloadinfo", "manual_loftpayloadinfo_extentsHints", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-15.1778, -18.517))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("timedep")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/setstats parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("setstats")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/setcountstats parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("setcountstats")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/num_colors parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("num_colors")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/setcolor1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm = hou_node.parm("setcolor1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints/color1 parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_loftpayloadinfo_extentsHints")
    hou_parm_tuple = hou_node.parmTuple("color1")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 1, 1))
    hou_parm_tuple.setAutoscope((False, False, False))


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/configure_manual_payload
    hou_node = hou_parent.createNode("configurelayer", "configure_manual_payload", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-13.5707, -14.0299))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/configure_manual_payload/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../payloadlayer\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_manual_payload/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_manual_payload/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_manual_payload")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/payload_input
    hou_node = hou_parent.createNode("switch", "payload_input", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-17.7221, -11.8832))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/payload_input/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../payloadinputprims\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../payloadinputprims\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../payloadinputprims\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../payloadinputprims\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/payload_input/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/payload_input/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/payload_input")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/null
    hou_node = hou_parent.createNode("null", "null", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-16.4531, -10.5165))
    hou_node.hide(False)
    hou_node.setSelected(False)
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/loftpayloadinfo
    hou_node = hou_parent.createNode("loftpayloadinfo", "loftpayloadinfo", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-10.3557, -26.2894))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("timedep")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/setstats parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("setstats")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/setcountstats parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("setcountstats")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/num_colors parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("num_colors")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/setcolor1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm = hou_node.parm("setcolor1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/loftpayloadinfo/color1 parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/loftpayloadinfo")
    hou_parm_tuple = hou_node.parmTuple("color1")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((0, 1, 1))
    hou_parm_tuple.setAutoscope((False, False, False))


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/rename_ASSET_mtls
    hou_node = hou_parent.createNode("restructurescenegraph", "rename_ASSET_mtls", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(14.1013, 1.63124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/flatteninput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("flatteninput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/op parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("op")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/primnewparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("primnewparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/new_parent")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/createparentprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("createparentprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/parentspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("parentspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/parentonlymissing parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("parentonlymissing")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/primoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("primoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/primnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("primnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"../rootprim\"),\"/\",\"\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/removeemptyvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("removeemptyvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/variantsetoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("variantsetoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/variantsetnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("variantsetnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/removereferences parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("removereferences")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/removepayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("removepayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/removeinherits parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("removeinherits")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/removespecializes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("removespecializes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/propertyoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("propertyoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/propertynewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("propertynewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_mtls/propertypattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_mtls")
    hou_parm = hou_node.parm("propertypattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/rename_ASSET_geo
    hou_node = hou_parent.createNode("restructurescenegraph", "rename_ASSET_geo", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(6.60721, 0.63124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/rename_ASSET_geo/flatteninput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("flatteninput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/op parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("op")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/primnewparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("primnewparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/new_parent")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/createparentprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("createparentprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/parentspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("parentspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/parentonlymissing parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("parentonlymissing")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/primoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("primoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/primnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("primnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"../rootprim\"),\"/\",\"\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/removeemptyvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("removeemptyvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/variantsetoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("variantsetoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/variantsetnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("variantsetnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/removereferences parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("removereferences")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/removepayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("removepayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/removeinherits parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("removeinherits")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/removespecializes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("removespecializes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/propertyoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("propertyoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/propertynewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("propertynewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_ASSET_geo/propertypattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_ASSET_geo")
    hou_parm = hou_node.parm("propertypattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/cleanup_files_and_update_thumbnail
    hou_node = hou_parent.createNode("pythonscript", "cleanup_files_and_update_thumbnail", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(3.09395, -45.1375))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/cleanup_files_and_update_thumbnail/python parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/cleanup_files_and_update_thumbnail")
    hou_parm = hou_node.parm("python")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("# This node cleans up the output files if they already exist.\n\nimport os\n\nnode = hou.pwd().node(\"..\")\nassetfile = node.evalParm(\"filename\")\na = node.evalParm(\"lopoutput\")\ng = a.replace(assetfile,node.evalParm(\"geolayer\"))\nm = a.replace(assetfile,node.evalParm(\"mtllayer\"))\ne = a.replace(assetfile,node.evalParm(\"extralayer\"))\np = a.replace(assetfile,node.evalParm(\"payloadlayer\"))\nl = a.replace(assetfile,node.evalParm(\"manualpayloadlayer\"))\n\nall_files = [a,g,m,e,p,l]\n\n# This screws up Windows; will revisit \"clean\" asset output later\n#for _path in all_files:\n#    if os.path.isfile(_path):\n#        os.remove(_path)\n\n# If enabled/not hidden, auto-update Houdini GL thumbnails\n#autoparm = node.parm(\"autothumbnail\")\n#render_thumbnail_parm = {1:\"executegl\", 2:\"executerender\"}\n#render_parm = render_thumbnail_parm.get( node.evalParm(\"mode\"), None)\n#if autoparm.eval() and render_parm:\n#    btn = node.parm(render_parm)\n#    btn.pressButton()\n        \n#print(asset_file)\n#print(geo_file)\n#print(mtl_file)\n#print(extras_file)\n")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/cleanup_files_and_update_thumbnail/maintainstate parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/cleanup_files_and_update_thumbnail")
    hou_parm = hou_node.parm("maintainstate")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/glropnet
    hou_node = hou_parent.createNode("ropnet", "glropnet", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-7.80071, -51.5264))
    hou_node.bypass(False)
    hou_node.hide(False)
    hou_node.setLocked(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/glropnet/execute parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet")
    hou_parm = hou_node.parm("execute")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/renderdialog parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet")
    hou_parm = hou_node.parm("renderdialog")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node

    # Code for /stage/componentoutput_custom/glropnet/houdinigl
    hou_node = hou_parent.createNode("opengl", "houdinigl", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-10.7453, -2.30326))
    hou_node.bypass(False)
    hou_node.hide(False)
    hou_node.setLocked(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/glropnet/houdinigl/execute parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("execute")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../executegl\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../executegl\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../executegl\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../executegl\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/renderdialog parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("renderdialog")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/trange parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("trange")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/take parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("take")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("_current_")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/stdswitch1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("stdswitch1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/opsource parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("opsource")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("lop")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/camera parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("camera")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/scenepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("scenepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/sopsource parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("sopsource")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("render")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vobjects parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vobjects")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/forceobjects parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("forceobjects")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/excludeobjects parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("excludeobjects")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/alights parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("alights")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/forcelights parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("forcelights")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/excludelights parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("excludelights")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../../THUMBNAIL")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../../THUMBNAIL/thumbnailcamera\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/purposerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("purposerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/purposeproxy parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("purposeproxy")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/purposeguide parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("purposeguide")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/soho_initsim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("soho_initsim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/soho_viewport_menu parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("soho_viewport_menu")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tres parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tres")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/res parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("res")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((256, 256))
    hou_parm_tuple.setAutoscope((False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(512)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../res1\")", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(512)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../res1\")", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(512)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../res1\")", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(512)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../res2\")", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(512)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../res2\")", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(512)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../../res2\")", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/resmenu parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("resmenu")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("640 480 1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/aspect parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("aspect")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tsheet parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tsheet")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/sheetsize parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("sheetsize")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((2, 2))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bgimage parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bgimage")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vpcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vpcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/picture parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("picture")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../../thumbnail_render/outputimage\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/mkpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("mkpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/saveretry parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("saveretry")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/imagetype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("imagetype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("image2d")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/colorcorrect parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("colorcorrect")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("lut_gamma")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/gamma parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("gamma")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2.2000000000000002)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/lut parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("lut")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/ociocolorspace parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("ociocolorspace")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/ociolooks parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("ociolooks")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vm_image_artist parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vm_image_artist")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vm_image_comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vm_image_comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vm_image_hostname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vm_image_hostname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vm_image_mplay_label parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vm_image_mplay_label")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vm_image_mplay_gamma parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vm_image_mplay_gamma")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vm_image_jpeg_quality parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vm_image_jpeg_quality")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(100)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vm_image_tiff_compression parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vm_image_tiff_compression")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("LZW")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vm_image_exr_compression parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vm_image_exr_compression")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("piz")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/aamode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("aamode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("aa4")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/usehdr parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("usehdr")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/stereo parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("stereo")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("leftright")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/shadingmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("shadingmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("smooth")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/usetextures parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("usetextures")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/hqlighting parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("hqlighting")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/lightsamples parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("lightsamples")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(8)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/shadows parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("shadows")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/shadowquality parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("shadowquality")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("areaaa")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/shadowmap parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("shadowmap")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2048)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/ambocclusion parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("ambocclusion")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/ambquality parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("ambquality")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/transparency parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("transparency")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/transquality parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("transquality")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("high")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/motionblur parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("motionblur")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/motionblurframes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("motionblurframes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(5)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/displacement parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("displacement")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/displacequality parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("displacequality")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/reflection parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("reflection")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/minreflection parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("minreflection")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.050000000000000003)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/hdrreflection parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("hdrreflection")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/reflectionsize parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("reflectionsize")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(512)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/backfacecull parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("backfacecull")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fognode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fognode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/uniformfog parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("uniformfog")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogdensity parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogdensity")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.001)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogopacity parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogopacity")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogcolor parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("fogcolor")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((0.5, 0.5, 0.5))
    hou_parm_tuple.setAutoscope((False, False, False))


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("fogrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((0, 1000))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogclipdistance parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogclipdistance")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1000000)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogheightmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogheightmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogheight parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogheight")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(100)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogheightfalloff parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogheightfalloff")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(100)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogsunenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogsunenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogsunbloom parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogsunbloom")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(5)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/fogintensity parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("fogintensity")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/volumefog parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("volumefog")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogquality parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vfogquality")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("volumehigh")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogdensity parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vfogdensity")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.001)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogopacity parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vfogopacity")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogcolor parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("vfogcolor")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((0.5, 0.5, 0.5))
    hou_parm_tuple.setAutoscope((False, False, False))


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("vfogrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 200))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogheightmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vfogheightmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogheight parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vfogheight")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(100)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogheightfalloff parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vfogheightfalloff")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(100)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogintensity parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("vfogintensity")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/vfogscatter parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("vfogscatter")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 1))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bloom parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bloom")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bloomscale parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bloomscale")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(10)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bloomintensity parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bloomintensity")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bloomthreshold parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bloomthreshold")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.94999999999999996)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/dof parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("dof")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bokeh parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bokeh")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bokehfile parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bokehfile")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HH/pic/bokeh_8.pic")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bokehcop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bokehcop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bokehaspect parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bokehaspect")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/bokehboost parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("bokehboost")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/volumequality parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("volumequality")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("high")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/lod parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("lod")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/wirewidth parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("wirewidth")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/wireblend parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("wireblend")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.5)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/particle parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("particle")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("points")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/pointsize parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("pointsize")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(3)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/discsize parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("discsize")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.050000000000000003)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/orientton parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("orientton")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/usesprites parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("usesprites")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/usegeocolor parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("usegeocolor")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tex2dlimit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tex2dlimit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tex2dres parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tex2dres")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2048)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tex2dformat parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tex2dformat")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("format16fp")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tex3dlimit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tex3dlimit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tex3dres parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tex3dres")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(384)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tex3dformat parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tex3dformat")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("format16fp")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/texmemlimit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("texmemlimit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(512)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/spritetexmaxres parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm_tuple = hou_node.parmTuple("spritetexmaxres")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((128, 128))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/instancepercent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("instancepercent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(100)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/instancelimit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("instancelimit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(20)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/instancestandin parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("instancestandin")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("bbox")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/prerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("prerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/lprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("lprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/preframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("preframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/lpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("lpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/postframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("postframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/lpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("lpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/tpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("tpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/postrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("postrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/glropnet/houdinigl/lpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/glropnet/houdinigl")
    hou_parm = hou_node.parm("lpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/set_default_variants
    hou_node = hou_parent.createNode("switch", "set_default_variants", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(6.72089, -30.6344))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/set_default_variants/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_default_variants")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_default_variants/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_default_variants")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setdefaultvariants\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setdefaultvariants\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setdefaultvariants\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setdefaultvariants\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_default_variants/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_default_variants")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_default_variants/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_default_variants")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_default_variants/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_default_variants")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_default_variants/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_default_variants")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_default_variants/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_default_variants")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_default_variants/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_default_variants")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/root_component_prim
    hou_node = hou_parent.createNode("primitive", "root_component_prim", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(1.34872, -2.66876))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/root_component_prim/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/root_component_prim")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/root_component_prim/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/root_component_prim")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../kind\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/root_component_prim/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/root_component_prim")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/root_component_prim/primtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/root_component_prim")
    hou_parm = hou_node.parm("primtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/root_component_prim/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/root_component_prim")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers
    hou_node = hou_parent.createNode("reference", "reference_geo_and_mtl_layers", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(4.56104, -6.56193))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/destinationprim_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("destinationprim_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inputref")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/referencefile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("referencefile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_geo_and_mtl_layers/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/reference_extras
    hou_node = hou_parent.createNode("reference", "reference_extras", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(7.3283, -12.9216))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/reference_extras/destinationprim_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("destinationprim_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inputref")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/referencefile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("referencefile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_extras/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_extras")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/configure_payload_layer
    hou_node = hou_parent.createNode("configurelayer", "configure_payload_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(5.54725, -15.8587))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/configure_payload_layer/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../payloadlayer\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_payload_layer/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("layer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/configure_payload_layer/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/configure_payload_layer")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/variant_payloadinfo
    hou_node = hou_parent.createNode("addvariant", "variant_payloadinfo", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-4.84719, -27.3421))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/variant_payloadinfo/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../foreach_geo_variant_loft_payload_end/primpattern\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/sourceprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("sourceprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/sourceprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("sourceprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprim('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/checkopinions parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("checkopinions")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/createoptionsblock parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("createoptionsblock")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../foreach_geo_variant_loft_payload_end/variantset\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/variantsetstrength parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("variantsetstrength")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/variantprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("variantprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../foreach_geo_variant_loft_payload_end/primpattern\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/variantname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("variantname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`@GEO_VARIANT`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/variant_payloadinfo/setvariantselection parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/variant_payloadinfo")
    hou_parm = hou_node.parm("setvariantselection")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/auto_thumbnail_camera
    hou_node = hou_parent.createNode("pythonscript", "auto_thumbnail_camera", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(0.637754, -42.2467))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.IntParmTemplate("lop_activation", "Activation", 1, default_value=([1]), min=0, max=1, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("python", "Python Code", 1, default_value=(["# Use the drop down menu to select example code snippets.\nnode = hou.pwd()\n\n# Add code to fetch node parameters and evaluate primitive patterns.\n# This should be done before calling editableStage or editableLayer.\n# paths = hou.LopSelectionRule(\"/*\").expandedPaths(node.input(0))\n\n# Add code to modify the stage.\nstage = node.editableStage()\n"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import pythonscriptmenu\n\nreturn pythonscriptmenu.buildSnippetMenu('Lop/pythonscript/python', kwargs=kwargs)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setTags({"editor": "1", "editorlang": "python", "editorlines": "20-50"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("asset", "asset", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template.setTags({"script_callback_language": "python"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("maintainstate", "Maintain State", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/auto_thumbnail_camera/python parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/auto_thumbnail_camera")
    hou_parm = hou_node.parm("python")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("from husd import assetutils\nfrom pxr import Usd, Gf, UsdGeom\n\nnode = hou.pwd()\nstage = node.editableStage()\n\n# Add code to modify the stage.\n# Use drop down menu to select examples.\nspin = node.node(\"..\").evalParm(\"spin\")\npitch = node.node(\"..\").evalParm(\"pitch\")\ndist = node.node(\"..\").evalParm(\"dist\")\n\nrotatex=25+pitch\nrotatey=-35+spin\n_prim_path = node.evalParm('asset')\nif not _prim_path.startswith('/'):\n    _prim_path = '/' + _prim_path\nprim = stage.GetPrimAtPath(node.evalParm('asset'))\n# Use the BBoxCache instead; directly using extentsHint is annoying/painful\nbbox_cache = UsdGeom.BBoxCache(Usd.TimeCode.EarliestTime(), ['default', 'render'])\nbounds = bbox_cache.ComputeLocalBound(prim).GetBox()\nassetutils.createFramedCameraToBounds(stage, bounds, assetutils.theThumbnailCameraPrimPath, rotatex=rotatex, rotatey=rotatey, offsetdistance=dist)")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/auto_thumbnail_camera/maintainstate parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/auto_thumbnail_camera")
    hou_parm = hou_node.parm("maintainstate")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/auto_thumbnail_camera/lop_activation parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/auto_thumbnail_camera")
    hou_parm = hou_node.parm("lop_activation")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailscenesource\")==0 && (ch(\"../viewthumbnailcam\") || contextoption('RENDER_THUMBNAIL') != 0.0)", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailscenesource\")==0 && (ch(\"../viewthumbnailcam\") || contextoption('RENDER_THUMBNAIL') != 0.0)", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailscenesource\")==0 && (ch(\"../viewthumbnailcam\") || contextoption('RENDER_THUMBNAIL') != 0.0)", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailscenesource\")==0 && (ch(\"../viewthumbnailcam\") || contextoption('RENDER_THUMBNAIL') != 0.0)", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/auto_thumbnail_camera/asset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/auto_thumbnail_camera")
    hou_parm = hou_node.parm("asset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/THUMBNAIL
    hou_node = hou_parent.createNode("null", "THUMBNAIL", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-7.79961, -48.5349))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("thumbnailcamera", "Thumbnail Camera", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template.setTags({"script_callback_language": "python"})
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/THUMBNAIL/thumbnailcamera parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/THUMBNAIL")
    hou_parm = hou_node.parm("thumbnailcamera")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/__HoudiniThumbnailCamera__")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("cam_path = __import__('husd').assetutils.theThumbnailCameraPrimPath\nif hou.pwd().node(\"..\").evalParm(\"thumbnailscenesource\"):\n    cam_path = hou.pwd().node(\"..\").evalParm(\"thumbnailinputcamera\")\nreturn cam_path\n", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9.04167)
    hou_keyframe.setExpression("__import__('husd').assetutils.theThumbnailCameraPrimPath", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("cam_path = __import__('husd').assetutils.theThumbnailCameraPrimPath\nif hou.pwd().node(\"..\").evalParm(\"thumbnailscenesource\"):\n    cam_path = hou.pwd().node(\"..\").evalParm(\"thumbnailinputcamera\")\nreturn cam_path\n", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9.04167)
    hou_keyframe.setExpression("__import__('husd').assetutils.theThumbnailCameraPrimPath", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("cam_path = __import__('husd').assetutils.theThumbnailCameraPrimPath\nif hou.pwd().node(\"..\").evalParm(\"thumbnailscenesource\"):\n    cam_path = hou.pwd().node(\"..\").evalParm(\"thumbnailinputcamera\")\nreturn cam_path\n", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9.04167)
    hou_keyframe.setExpression("__import__('husd').assetutils.theThumbnailCameraPrimPath", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/rop
    hou_node = hou_parent.createNode("usd_rop", "rop", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(3.09395, -46.887))
    hou_node.bypass(False)
    hou_node.hide(False)
    hou_node.setLocked(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.ButtonParmTemplate("execute", "Save to Disk")
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"takecontrol": "always"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ButtonParmTemplate("executebackground", "Save to Disk in Background")
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"takecontrol": "always"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ButtonParmTemplate("renderdialog", "Controls...")
    hou_parm_template.hideLabel(True)
    hou_parm_template.setTags({"takecontrol": "always"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.MenuParmTemplate("trange", "Valid Frame Range", menu_items=(["off","normal","on","stage"]), menu_labels=(["Render Current Frame","Render Specific Frame Range","Render Specific Frame Range Only (Strict)","Render Frame Range From Stage"]), default_value=0, icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False, is_button_strip=False, strip_uses_icons=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FloatParmTemplate("f", "Start/End/Inc", 3, default_value=([1, 240, 1]), default_expression=(["$FSTART","$FEND",""]), default_expression_language=([hou.scriptLanguage.Hscript,hou.scriptLanguage.Hscript,hou.scriptLanguage.Hscript]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FloatParmTemplate("foffset", "Preroll/Postroll/Inc", 3, default_value=([0, 0, 1]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("take", "Render with Take", 1, default_value=(["_current_"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("loppath", "LOP Path", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.NodeReference, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setTags({"opfilter": "!!LOP!!", "oprelative": "."})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lopoutput", "Output File", 1, default_value=(["$HIP/geo/$HIPNAME.$OS.usd"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setTags({"filechooser_mode": "write"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("savestyle", "Save Style", 1, default_value=(["flattenimplicitlayers"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["flattenimplicitlayers","flattenalllayers","separate","flattenstage"]), menu_labels=(["Flatten Implicit Layers (Collapse Implicit Sublayers, Preserve References)","Flatten All Layers (Collapse All Sublayers, Preserve References)","Separate Layers (Preserve All Sublayers and References)","Flatten Stage (Collapse All Sublayers and References)"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("striplayerbreaks", "Strip Layers Above Layer Breaks", default_value=True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("fileperframe", "Flush Data After Each Frame", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("extrafiles_group2", "Extra Files", folder_type=hou.folderType.Collapsible, default_value=0, ends_tab_group=False)
    hou_parm_template.setTags({"group_type": "collapsible"})
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("savepattern", "Files to Save", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("errorsavingimplicitpaths", "Error Saving Layers with Implicit Paths", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("savefilesfromdisk", "Save Updates to Modified Files From Disk", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("flattenfilelayers", "Flatten File Layers", default_value=False)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("flattensoplayers", "Flatten SOP Layers", default_value=False)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("outputprocessor_group2", "Output Processing", folder_type=hou.folderType.Collapsible, default_value=0, ends_tab_group=False)
    hou_parm_template.setTags({"group_type": "collapsible"})
    # Code for parameter template
    hou_parm_template2 = hou.MenuParmTemplate("outputprocessors", "Output Processors", menu_items=([]), menu_labels=([]), default_value=0, icon_names=([]), item_generator_script="import loputils\nnode = kwargs['node']\nreturn loputils.createOutputProcessorMenu(node)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False, is_button_strip=False, strip_uses_icons=False)
    hou_parm_template2.setScriptCallback("import loputils\nloputils.handleOutputProcessorAdd(kwargs)")
    hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template2.setTags({"script_callback": "import loputils\nloputils.handleOutputProcessorAdd(kwargs)", "script_callback_language": "python"})
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.FolderParmTemplate("savepathsrelativetooutput_group", "Save Paths Relative to Output Path", folder_type=hou.folderType.Simple, default_value=0, ends_tab_group=False)
    hou_parm_template2.setTags({"group_type": "simple"})
    # Code for parameter template
    hou_parm_template3 = hou.ToggleParmTemplate("enableoutputprocessor_savepathsrelativetooutput", "Enable", default_value=True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.LabelParmTemplate("savepathsrelativetooutput_spacer", "Spacer", column_labels=([""]))
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("savepathsrelativetooutput_moveup", "Move Up")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_up", "script_callback": "import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("savepathsrelativetooutput_remove", "Remove")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorRemove(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_delete", "script_callback": "import loputils\nloputils.handleOutputProcessorRemove(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.StringParmTemplate("savepathsrelativetooutput_rootdir", "Override Output Directory", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Directory, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enableoutputprocessor_savepathsrelativetooutput == 0 }")
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.FolderParmTemplate("localizeassets_group", "Copy All Assets to Referencing Layer Directory", folder_type=hou.folderType.Simple, default_value=0, ends_tab_group=False)
    hou_parm_template2.setTags({"group_type": "simple"})
    # Code for parameter template
    hou_parm_template3 = hou.ToggleParmTemplate("enableoutputprocessor_localizeassets", "Enable", default_value=True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.LabelParmTemplate("localizeassets_spacer", "Spacer", column_labels=([""]))
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("localizeassets_moveup", "Move Up")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_up", "script_callback": "import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("localizeassets_remove", "Remove")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorRemove(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_delete", "script_callback": "import loputils\nloputils.handleOutputProcessorRemove(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.StringParmTemplate("localizeassets_subdirectory", "Output Subdirectory", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enableoutputprocessor_localizeassets == 0 }")
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.FolderParmTemplate("savetodirectory_group", "Save All New USD Files to a Specific Directory", folder_type=hou.folderType.Simple, default_value=0, ends_tab_group=False)
    hou_parm_template2.setTags({"group_type": "simple"})
    # Code for parameter template
    hou_parm_template3 = hou.ToggleParmTemplate("enableoutputprocessor_savetodirectory", "Enable", default_value=True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.LabelParmTemplate("savetodirectory_spacer", "Spacer", column_labels=([""]))
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("savetodirectory_moveup", "Move Up")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_up", "script_callback": "import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("savetodirectory_remove", "Remove")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorRemove(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_delete", "script_callback": "import loputils\nloputils.handleOutputProcessorRemove(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.StringParmTemplate("savetodirectory_directory", "Output Directory", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template3.setConditional(hou.parmCondType.DisableWhen, "{ enableoutputprocessor_savetodirectory == 0 }")
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.FolderParmTemplate("simplerelativepaths_group", "Use Relative Paths", folder_type=hou.folderType.Simple, default_value=0, ends_tab_group=False)
    hou_parm_template2.setTags({"group_type": "simple"})
    # Code for parameter template
    hou_parm_template3 = hou.ToggleParmTemplate("enableoutputprocessor_simplerelativepaths", "Enable", default_value=True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.LabelParmTemplate("simplerelativepaths_spacer", "Spacer", column_labels=([""]))
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("simplerelativepaths_moveup", "Move Up")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_up", "script_callback": "import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("simplerelativepaths_remove", "Remove")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorRemove(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_delete", "script_callback": "import loputils\nloputils.handleOutputProcessorRemove(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("layermetadata_group2", "Layer Metadata", folder_type=hou.folderType.Collapsible, default_value=0, ends_tab_group=False)
    hou_parm_template.setTags({"group_type": "collapsible"})
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("defaultprim", "Default Primitive", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import loputils\nloppath = kwargs['node'].parm('loppath').evalAsString()\nlop = kwargs['node'].node(loppath)\nstage = lop.stage() if lop else None\nreturn loputils.createRootPrimMenu(stage)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("requiredefaultprim", "Error Saving Layer with No Default Primitive", default_value=False)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("savetimeinfo", "Save ROP's Time Information to Output", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("clearhoudinicustomdata", "Clear Houdini-Specific Custom Data", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("ensuremetricsset", "Ensure Basic Metrics Are Set on All Layers", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("contextoptions_group2", "Context Options", folder_type=hou.folderType.Collapsible, default_value=0, ends_tab_group=False)
    hou_parm_template.setTags({"group_type": "collapsible"})
    # Code for parameter template
    hou_parm_template2 = hou.FolderParmTemplate("optioncount", "Number of Options", folder_type=hou.folderType.MultiparmBlock, default_value=1, ends_tab_group=False)
    # Code for parameter template
    hou_parm_template3 = hou.FolderParmTemplate("optiongroup#", "", folder_type=hou.folderType.Simple, default_value=0, ends_tab_group=False)
    hou_parm_template3.setTags({"group_type": "simple"})
    # Code for parameter template
    hou_parm_template4 = hou.ToggleParmTemplate("optionenable#", "Enable", default_value=True)
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    # Code for parameter template
    hou_parm_template4 = hou.StringParmTemplate("optionname#", "Option Name", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template4.setJoinWithNext(True)
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    # Code for parameter template
    hou_parm_template4 = hou.StringParmTemplate("optiontype#", "Option Type", 1, default_value=(["string"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["string","float"]), menu_labels=(["String","Number"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    # Code for parameter template
    hou_parm_template4 = hou.StringParmTemplate("optionstrvalue#", "Option Value", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ optiontype# != string }")
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    # Code for parameter template
    hou_parm_template4 = hou.FloatParmTemplate("optionfloatvalue#", "Option Value", 1, default_value=([0]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1)
    hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ optiontype# != float }")
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.SeparatorParmTemplate("separator_scripts")
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("tprerender", "Pre-Render Script", default_value=True)
    hou_parm_template.hideLabel(True)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("prerender", "Pre-Render Script", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"filechooser_mode": "read"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lprerender", "Pre-Render Script Language", 1, default_value=(["hscript"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["hscript","python"]), menu_labels=(["Hscript","Python"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.hideLabel(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("tpreframe", "Pre-Frame Script", default_value=True)
    hou_parm_template.hideLabel(True)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("preframe", "Pre-Frame Script", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"filechooser_mode": "read"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lpreframe", "Pre-Frame Script Language", 1, default_value=(["hscript"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["hscript","python"]), menu_labels=(["Hscript","Python"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.hideLabel(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("tpostframe", "Post-Frame Script", default_value=True)
    hou_parm_template.hideLabel(True)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("postframe", "Post-Frame Script", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"filechooser_mode": "read"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lpostframe", "Post-Frame Script Language", 1, default_value=(["hscript"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["hscript","python"]), menu_labels=(["Hscript","Python"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.hideLabel(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("tpostrender", "Post-Render Script", default_value=True)
    hou_parm_template.hideLabel(True)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("postrender", "Post-Render Script", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"filechooser_mode": "read"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lpostrender", "Post-Render Script Language", 1, default_value=(["hscript"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["hscript","python"]), menu_labels=(["Hscript","Python"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.hideLabel(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("initsim", "Initialize Simulation OPs", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("alfprogress", "Alfred Style Progress", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("reportnetwork", "Report Network Use", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("trackprimexistence", "Track Primitive Existence to Set Visibility", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("strippostlayers", "Strip Post-Layers", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("usenetworksafesave", "Use Network Drive Safe Save (Windows Only)", default_value=True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("filtertimesamples", "Filter Time Samples", 1, default_value=(["framerange"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["never","framerange","always"]), menu_labels=(["Never","When Using Frame Ranges","Always"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FloatParmTemplate("filtertimesamplespadding", "Extra Frames", 1, default_value=([0]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1)
    hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ filtertimesamples == never } { filtertimesamples == framerange trange == off }")
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("setropcook", "Set ROP Cook Context Option", default_value=True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("outputprocessor_removehfs", "Remove Houdini Install Directory from Asset Paths", default_value=True)
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/rop/execute parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("execute")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../execute\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../execute\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../execute\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../execute\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/executebackground parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("executebackground")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executebackground\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executebackground\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executebackground\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executebackground\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/renderdialog parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("renderdialog")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/trange parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("trange")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm_tuple = hou_node.parmTuple("f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/foffset parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm_tuple = hou_node.parmTuple("foffset")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((0, 0, 1))
    hou_parm_tuple.setAutoscope((False, False, False))


    # Code for /stage/componentoutput_custom/rop/take parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("take")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("_current_")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../cleanup_files_and_update_thumbnail")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/lopoutput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("lopoutput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/home/tushita/usd/assets/KB3D_MTM_Asset_M/componentoutput_custom.usd:SDF_FORMAT_ARGS:format=usda")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("strcat(chs(\"../lopoutput\"), \":SDF_FORMAT_ARGS:format=usda\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("strcat(chs(\"../lopoutput\"), \":SDF_FORMAT_ARGS:format=usda\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("strcat(chs(\"../lopoutput\"), \":SDF_FORMAT_ARGS:format=usda\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("strcat(chs(\"../lopoutput\"), \":SDF_FORMAT_ARGS:format=usda\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/savestyle parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savestyle")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("flattenimplicitlayers")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../savestyle\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../savestyle\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../savestyle\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../savestyle\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/striplayerbreaks parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("striplayerbreaks")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../striplayerbreaks\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../striplayerbreaks\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../striplayerbreaks\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../striplayerbreaks\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/strippostlayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("strippostlayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/fileperframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("fileperframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../fileperframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../fileperframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../fileperframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../fileperframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/trackprimexistence parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("trackprimexistence")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/usenetworksafesave parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("usenetworksafesave")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/filtertimesamples parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("filtertimesamples")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("never")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/filtertimesamplespadding parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("filtertimesamplespadding")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/extrafiles_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("extrafiles_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savepattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savepattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/errorsavingimplicitpaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("errorsavingimplicitpaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savefilesfromdisk parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savefilesfromdisk")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/flattenfilelayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("flattenfilelayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/flattensoplayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("flattensoplayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/outputprocessor_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("outputprocessor_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/outputprocessor_removehfs parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("outputprocessor_removehfs")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/outputprocessors parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("outputprocessors")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("matchoutputextension")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/layermetadata_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("layermetadata_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/componentoutput_custom")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("ifs(ch(\"../mode\"), chs(\"../rootprim\"), chs(\"../IN/inputroot\"))", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("ifs(ch(\"../mode\"), chs(\"../rootprim\"), chs(\"../IN/inputroot\"))", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("ifs(ch(\"../mode\"), chs(\"../rootprim\"), chs(\"../IN/inputroot\"))", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("ifs(ch(\"../mode\"), chs(\"../rootprim\"), chs(\"../IN/inputroot\"))", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/requiredefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("requiredefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../requiredefaultprim\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../requiredefaultprim\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../requiredefaultprim\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../requiredefaultprim\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/savetimeinfo parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savetimeinfo")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../savetimeinfo\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../savetimeinfo\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../savetimeinfo\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../savetimeinfo\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/clearhoudinicustomdata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("clearhoudinicustomdata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../clearhoudinicustomdata\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../clearhoudinicustomdata\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../clearhoudinicustomdata\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../clearhoudinicustomdata\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/ensuremetricsset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("ensuremetricsset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../ensuremetricsset\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../ensuremetricsset\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../ensuremetricsset\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../ensuremetricsset\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/contextoptions_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("contextoptions_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/setropcook parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("setropcook")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/optioncount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("optioncount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optioncount\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optioncount\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optioncount\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optioncount\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/tprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("tprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tprerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tprerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tprerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tprerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/prerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("prerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../prerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../prerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../prerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../prerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/lprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("lprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lprerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lprerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lprerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lprerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/tpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("tpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tpreframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tpreframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tpreframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tpreframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/preframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("preframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../preframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../preframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../preframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../preframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/lpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("lpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lpreframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lpreframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lpreframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lpreframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/tpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("tpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tpostframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tpostframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tpostframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../tpostframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/postframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("postframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../postframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../postframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../postframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../postframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/lpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("lpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lpostframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lpostframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lpostframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../lpostframe\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/tpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("tpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/postrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("postrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/home/tushita/houdini21.0/custom_tools/scripts/python/tools/rop_hipbackup.py")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/lpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("lpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("python")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/initsim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("initsim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../initsim\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../initsim\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../initsim\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../initsim\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/alfprogress parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("alfprogress")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../alfprogress\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../alfprogress\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../alfprogress\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../alfprogress\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/reportnetwork parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("reportnetwork")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../reportnetwork\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../reportnetwork\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../reportnetwork\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../reportnetwork\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/optiongroup1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("optiongroup1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/optionenable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("optionenable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optionenable1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optionenable1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optionenable1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optionenable1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/optionname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("optionname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optionname1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optionname1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optionname1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optionname1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/optiontype1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("optiontype1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("string")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optiontype1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optiontype1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optiontype1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optiontype1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/optionstrvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("optionstrvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optionstrvalue1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optionstrvalue1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optionstrvalue1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../optionstrvalue1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/optionfloatvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("optionfloatvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optionfloatvalue1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optionfloatvalue1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optionfloatvalue1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../optionfloatvalue1\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/extrafiles_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("extrafiles_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/outputprocessor_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("outputprocessor_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savepathsrelativetooutput_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savepathsrelativetooutput_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/enableoutputprocessor_savepathsrelativetooutput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("enableoutputprocessor_savepathsrelativetooutput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savepathsrelativetooutput_moveup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savepathsrelativetooutput_moveup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savepathsrelativetooutput_remove parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savepathsrelativetooutput_remove")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savepathsrelativetooutput_rootdir parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savepathsrelativetooutput_rootdir")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/localizeassets_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("localizeassets_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/enableoutputprocessor_localizeassets parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("enableoutputprocessor_localizeassets")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../localize\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../localize\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../localize\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../localize\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/localizeassets_moveup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("localizeassets_moveup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/localizeassets_remove parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("localizeassets_remove")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/localizeassets_subdirectory parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("localizeassets_subdirectory")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../localizesubdir\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savetodirectory_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savetodirectory_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/enableoutputprocessor_savetodirectory parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("enableoutputprocessor_savetodirectory")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savetodirectory_moveup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savetodirectory_moveup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savetodirectory_remove parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savetodirectory_remove")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/savetodirectory_directory parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("savetodirectory_directory")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/home/tushita/usd/assets/KB3D_MTM_Asset_M")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import os\nreturn os.path.dirname(hou.pwd().evalParm(\"lopoutput\"))", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import os\nreturn os.path.dirname(hou.pwd().evalParm(\"lopoutput\"))", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import os\nreturn os.path.dirname(hou.pwd().evalParm(\"lopoutput\"))", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import os\nreturn os.path.dirname(hou.pwd().evalParm(\"lopoutput\"))", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/rop/simplerelativepaths_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("simplerelativepaths_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/enableoutputprocessor_simplerelativepaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("enableoutputprocessor_simplerelativepaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/simplerelativepaths_moveup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("simplerelativepaths_moveup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/simplerelativepaths_remove parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("simplerelativepaths_remove")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/layermetadata_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("layermetadata_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rop/contextoptions_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rop")
    hou_parm = hou_node.parm("contextoptions_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/fetch_IN_ref
    hou_node = hou_parent.createNode("fetch", "fetch_IN_ref", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(9.13781, -4.63401))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/fetch_IN_ref/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/fetch_IN_ref")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../IN")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/fetch_extras_layer
    hou_node = hou_parent.createNode("fetch", "fetch_extras_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-10.8415, -9.89183))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/fetch_extras_layer/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/fetch_extras_layer")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../extras_layer")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/switch_ref_point
    hou_node = hou_parent.createNode("switch", "switch_ref_point", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(8.08993, -8.49031))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/switch_ref_point/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/switch_ref_point")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/switch_ref_point/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/switch_ref_point")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../mode\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../mode\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../mode\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../mode\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/switch_ref_point/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/switch_ref_point")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/switch_ref_point/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/switch_ref_point")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/switch_ref_point/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/switch_ref_point")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/switch_ref_point/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/switch_ref_point")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/switch_ref_point/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/switch_ref_point")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/switch_ref_point/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/switch_ref_point")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/manual_add_extras_layer
    hou_node = hou_parent.createNode("switch", "manual_add_extras_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-13.5707, -12.9922))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/manual_add_extras_layer/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_add_extras_layer")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_add_extras_layer/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_add_extras_layer")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/manual_add_extras_layer/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_add_extras_layer")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_add_extras_layer/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_add_extras_layer")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_add_extras_layer/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_add_extras_layer")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_add_extras_layer/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_add_extras_layer")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_add_extras_layer/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_add_extras_layer")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/manual_add_extras_layer/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/manual_add_extras_layer")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Python)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/fetch_SceneImport_ref
    hou_node = hou_parent.createNode("fetch", "fetch_SceneImport_ref", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(12.0855, -4.63401))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/fetch_SceneImport_ref/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/fetch_SceneImport_ref")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../si_reference_geo_and_mtl_layers")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/fetch_IN
    hou_node = hou_parent.createNode("fetch", "fetch_IN", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(34.0199, -12.5906))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/fetch_IN/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/fetch_IN")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../IN")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_msg
    hou_node = hou_parent.createNode("error", "si_msg", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(34.0199, -13.5906))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_msg/numerror parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_msg")
    hou_parm = hou_node.parm("numerror")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_msg/errormsg1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_msg")
    hou_parm = hou_node.parm("errormsg1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("Scene Import mode only supports one Object at a time.")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_msg/severity1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_msg")
    hou_parm = hou_node.parm("severity1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_msg/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_msg")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("sel = hou.LopSelectionRule()\nsel.setPathPattern(\"%kind:component\")\nreturn len(sel.expandedPaths(hou.pwd().inputs()[0]))!=1 and hou.pwd().parent().evalParm(\"mode\")==2", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("sel = hou.LopSelectionRule()\nsel.setPathPattern(\"%kind:component\")\nreturn len(sel.expandedPaths(hou.pwd().inputs()[0]))!=1 and hou.pwd().parent().evalParm(\"mode\")==2", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("sel = hou.LopSelectionRule()\nsel.setPathPattern(\"%kind:component\")\nreturn len(sel.expandedPaths(hou.pwd().inputs()[0]))!=1 and hou.pwd().parent().evalParm(\"mode\")==2", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("sel = hou.LopSelectionRule()\nsel.setPathPattern(\"%kind:component\")\nreturn len(sel.expandedPaths(hou.pwd().inputs()[0]))!=1 and hou.pwd().parent().evalParm(\"mode\")==2", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_msg/errormsg2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_msg")
    hou_parm = hou_node.parm("errormsg2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setExpression("msg = ''\nsel = hou.LopSelectionRule()\nsel.setPathPattern(\"%kind:component\")\nprim = sel.expandedPaths(hou.pwd().inputs()[0])\nif len(prim)>1:\n    msg = \"Multiple root prims detected. If Scene Import materials are missing, change Material Destination Path to '{}'\"\n    prim = prim[0].pathString\nif not prim:\n    prim=''\nreturn msg.format(prim)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setExpression("msg = ''\nsel = hou.LopSelectionRule()\nsel.setPathPattern(\"%kind:component\")\nprim = sel.expandedPaths(hou.pwd().inputs()[0])\nif len(prim)>1:\n    msg = \"Multiple root prims detected. If Scene Import materials are missing, change Material Destination Path to '{}'\"\n    prim = prim[0].pathString\nif not prim:\n    prim=''\nreturn msg.format(prim)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setExpression("msg = ''\nsel = hou.LopSelectionRule()\nsel.setPathPattern(\"%kind:component\")\nprim = sel.expandedPaths(hou.pwd().inputs()[0])\nif len(prim)>1:\n    msg = \"Multiple root prims detected. If Scene Import materials are missing, change Material Destination Path to '{}'\"\n    prim = prim[0].pathString\nif not prim:\n    prim=''\nreturn msg.format(prim)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setExpression("msg = ''\nsel = hou.LopSelectionRule()\nsel.setPathPattern(\"%kind:component\")\nprim = sel.expandedPaths(hou.pwd().inputs()[0])\nif len(prim)>1:\n    msg = \"Multiple root prims detected. If Scene Import materials are missing, change Material Destination Path to '{}'\"\n    prim = prim[0].pathString\nif not prim:\n    prim=''\nreturn msg.format(prim)", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_msg/severity2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_msg")
    hou_parm = hou_node.parm("severity2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_msg/enable2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_msg")
    hou_parm = hou_node.parm("enable2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("sel = hou.LopSelectionRule()\nsel.setPathPattern(\"/*\")\nhasMultipleTopPrims = len(sel.expandedPaths(hou.pwd().inputs()[0]))!=1\nsel.setPathPattern(\"%kind:component\")\nhasSingleComponent = len(sel.expandedPaths(hou.pwd().inputs()[0]))==1\nreturn hasMultipleTopPrims and hasSingleComponent", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("sel = hou.LopSelectionRule()\nsel.setPathPattern(\"/*\")\nhasMultipleTopPrims = len(sel.expandedPaths(hou.pwd().inputs()[0]))!=1\nsel.setPathPattern(\"%kind:component\")\nhasSingleComponent = len(sel.expandedPaths(hou.pwd().inputs()[0]))==1\nreturn hasMultipleTopPrims and hasSingleComponent", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("sel = hou.LopSelectionRule()\nsel.setPathPattern(\"/*\")\nhasMultipleTopPrims = len(sel.expandedPaths(hou.pwd().inputs()[0]))!=1\nsel.setPathPattern(\"%kind:component\")\nhasSingleComponent = len(sel.expandedPaths(hou.pwd().inputs()[0]))==1\nreturn hasMultipleTopPrims and hasSingleComponent", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("sel = hou.LopSelectionRule()\nsel.setPathPattern(\"/*\")\nhasMultipleTopPrims = len(sel.expandedPaths(hou.pwd().inputs()[0]))!=1\nsel.setPathPattern(\"%kind:component\")\nhasSingleComponent = len(sel.expandedPaths(hou.pwd().inputs()[0]))==1\nreturn hasMultipleTopPrims and hasSingleComponent", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_remove_old_payload
    hou_node = hou_parent.createNode("restructurescenegraph", "si_remove_old_payload", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(34.0199, -15.749))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_remove_old_payload/flatteninput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("flatteninput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/op parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("op")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(5)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/primnewparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("primnewparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/new_parent")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/createparentprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("createparentprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/parentspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("parentspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/parentonlymissing parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("parentonlymissing")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/primoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("primoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/primnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("primnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/removeemptyvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("removeemptyvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/variantsetoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("variantsetoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/variantsetnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("variantsetnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/removereferences parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("removereferences")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/removepayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("removepayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/removeinherits parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("removeinherits")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/removespecializes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("removespecializes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/propertyoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("propertyoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/propertynewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("propertynewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_remove_old_payload/propertypattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_remove_old_payload")
    hou_parm = hou_node.parm("propertypattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/si_configure_geo_layer
    hou_node = hou_parent.createNode("configurelayer", "si_configure_geo_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(29.401, -16.749))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../geolayer\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("layer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_geo_layer/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_geo_layer")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_configure_mtl_layer
    hou_node = hou_parent.createNode("configurelayer", "si_configure_mtl_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(34.0199, -16.749))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../mtllayer\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("layer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_mtl_layer/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_mtl_layer")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_root_component_prim
    hou_node = hou_parent.createNode("primitive", "si_root_component_prim", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(25.6372, -16.299))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_root_component_prim/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_root_component_prim")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_root_component_prim/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_root_component_prim")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../kind\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_root_component_prim/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_root_component_prim")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_root_component_prim/primtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_root_component_prim")
    hou_parm = hou_node.parm("primtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_root_component_prim/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_root_component_prim")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers
    hou_node = hou_parent.createNode("reference", "si_reference_geo_and_mtl_layers", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(31.721, -19.2741))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/destinationprim_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("destinationprim_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inputref")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/referencefile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("referencefile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_geo_and_mtl_layers")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_fetch_extras_layer
    hou_node = hou_parent.createNode("fetch", "si_fetch_extras_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(34.7482, -20.1525))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_fetch_extras_layer/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_fetch_extras_layer")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../extras_layer")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_reference_extras
    hou_node = hou_parent.createNode("reference", "si_reference_extras", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(33.3083, -21.4475))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_reference_extras/destinationprim_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("destinationprim_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inputref")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/referencefile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("referencefile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_reference_extras/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_reference_extras")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_payload
    hou_node = hou_parent.createNode("reference", "si_payload", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(31.2534, -25.0272))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_payload/destinationprim_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("destinationprim_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`lopinputprims('.', 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../kind\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("inputpayload")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/referencefile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("referencefile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_payload/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_payload")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_add_extras_layer
    hou_node = hou_parent.createNode("switch", "si_add_extras_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(32.3856, -22.5174))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_add_extras_layer/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_add_extras_layer")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_add_extras_layer/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_add_extras_layer")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("hou.pwd().node(\"../extras\").activeLayer()!=None", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_add_extras_layer/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_add_extras_layer")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_add_extras_layer/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_add_extras_layer")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_add_extras_layer/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_add_extras_layer")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_add_extras_layer/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_add_extras_layer")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_add_extras_layer/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_add_extras_layer")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_add_extras_layer/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_add_extras_layer")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Python)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_configure_payload_layer
    hou_node = hou_parent.createNode("configurelayer", "si_configure_payload_layer", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(32.3856, -23.525))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../payloadlayer\")`")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../IN/inputroot\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("layer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_configure_payload_layer/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_configure_payload_layer")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_loftpayloadinfo
    hou_node = hou_parent.createNode("loftpayloadinfo", "si_loftpayloadinfo", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(31.2547, -26.0303))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("timedep")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$RFEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/setstats parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("setstats")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/setcountstats parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("setcountstats")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/num_colors parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("num_colors")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/setcolor1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm = hou_node.parm("setcolor1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_loftpayloadinfo/color1 parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_loftpayloadinfo")
    hou_parm_tuple = hou_node.parmTuple("color1")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 1, 1))
    hou_parm_tuple.setAutoscope((False, False, False))


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_input
    hou_node = hou_parent.createNode("configurelayer", "si_input", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(34.0199, -14.5906))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_input/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_input/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_input/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_input/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_input/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("layer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_input/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_input")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo
    hou_node = hou_parent.createNode("sublayer", "si_sublayer_sop_geo", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(29.3998, -15.7474))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/parentlayer_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("parentlayer_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/loadpayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("loadpayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("auto")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/editrootlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("editrootlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/findsublayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("findsublayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/removefoundsublayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("removefoundsublayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/composition_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("composition_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/sublayertype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("sublayertype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("files")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/positiontype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("positiontype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("strongest")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/positionindex parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("positionindex")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/enable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("enable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/sublayerfile_group1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("sublayerfile_group1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("anon:0x7f1f8c7f8680:LOP:rootlayer")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setExpression("node = hou.pwd()\nin_node = node.node(\"../si_input\")\nlayer = in_node.activeLayer()\nresult = \"\"\nif layer:\n    result=layer.externalReferences[0]\nreturn result", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setExpression("node = hou.pwd()\nin_node = node.node(\"../si_input\")\nlayer = in_node.activeLayer()\nresult = \"\"\nif layer:\n    result=layer.externalReferences[0]\nreturn result", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setExpression("node = hou.pwd()\nin_node = node.node(\"../si_input\")\nlayer = in_node.activeLayer()\nresult = \"\"\nif layer:\n    result=layer.externalReferences[0]\nreturn result", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(9)
    hou_keyframe.setExpression("node = hou.pwd()\nin_node = node.node(\"../si_input\")\nlayer = in_node.activeLayer()\nresult = \"\"\nif layer:\n    result=layer.externalReferences[0]\nreturn result", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/mute1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("mute1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/si_sublayer_sop_geo/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/si_sublayer_sop_geo")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/strip_composition_arcs
    hou_node = hou_parent.createNode("restructurescenegraph", "strip_composition_arcs", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-2.30696, 1.33124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/strip_composition_arcs/flatteninput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("flatteninput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/op parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("op")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(5)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/primnewparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("primnewparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/new_parent")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/createparentprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("createparentprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/parentspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("parentspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/parentonlymissing parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("parentonlymissing")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/primoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("primoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/primnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("primnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/removeemptyvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("removeemptyvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/variantsetoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("variantsetoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/variantsetnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("variantsetnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/removereferences parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("removereferences")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/removepayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("removepayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/removeinherits parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("removeinherits")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/removespecializes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("removespecializes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/propertyoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("propertyoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/propertynewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("propertynewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/strip_composition_arcs/propertypattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/strip_composition_arcs")
    hou_parm = hou_node.parm("propertypattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/remove_geo_variant
    hou_node = hou_parent.createNode("restructurescenegraph", "remove_geo_variant", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-2.30696, 0.33124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/remove_geo_variant/flatteninput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("flatteninput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/op parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("op")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(4)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/primnewparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("primnewparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/new_parent")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/createparentprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("createparentprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/parentspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("parentspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/parentonlymissing parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("parentonlymissing")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/primoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("primoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/primnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("primnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/removeemptyvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("removeemptyvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/variantsetoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("variantsetoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/variantsetnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("variantsetnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("geo")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/removereferences parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("removereferences")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/removepayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("removepayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/removeinherits parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("removeinherits")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/removespecializes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("removespecializes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/propertyoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("propertyoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/propertynewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("propertynewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_geo_variant/propertypattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_geo_variant")
    hou_parm = hou_node.parm("propertypattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/remove_mtl_variant
    hou_node = hou_parent.createNode("restructurescenegraph", "remove_mtl_variant", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-2.30696, -0.66876))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/remove_mtl_variant/flatteninput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("flatteninput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/op parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("op")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(4)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/primnewparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("primnewparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/new_parent")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/createparentprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("createparentprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/parentspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("parentspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/parentonlymissing parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("parentonlymissing")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/primoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("primoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/primnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("primnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/removeemptyvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("removeemptyvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/variantsetoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("variantsetoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/variantsetnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("variantsetnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("mtl")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/removereferences parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("removereferences")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/removepayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("removepayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/removeinherits parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("removeinherits")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/removespecializes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("removespecializes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/propertyoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("propertyoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/propertynewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("propertynewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/remove_mtl_variant/propertypattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/remove_mtl_variant")
    hou_parm = hou_node.parm("propertypattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/isolate_root_prim
    hou_node = hou_parent.createNode("restructurescenegraph", "isolate_root_prim", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-2.30696, -1.66876))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/isolate_root_prim/flatteninput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("flatteninput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET/* /ASSET_*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/op parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("op")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/primnewparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("primnewparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/new_parent")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/createparentprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("createparentprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/parentspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("parentspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/parentonlymissing parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("parentonlymissing")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/primoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("primoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/primnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("primnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/removeemptyvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("removeemptyvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/variantsetoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("variantsetoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/variantsetnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("variantsetnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/removereferences parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("removereferences")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/removepayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("removepayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/removeinherits parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("removeinherits")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/removespecializes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("removespecializes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/propertyoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("propertyoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/propertynewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("propertynewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/isolate_root_prim/propertypattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/isolate_root_prim")
    hou_parm = hou_node.parm("propertypattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/rename_root_prim
    hou_node = hou_parent.createNode("restructurescenegraph", "rename_root_prim", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-2.30696, -2.66876))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/rename_root_prim/flatteninput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("flatteninput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/op parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("op")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/folder2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("folder2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/primnewparent parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("primnewparent")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/new_parent")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/createparentprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("createparentprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/folder0 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("folder0")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomScope")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/parentspecifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("parentspecifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/parentonlymissing parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("parentonlymissing")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/folder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("folder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/primoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("primoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/primnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("primnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"../IN/inputroot\"),\"/\",\"\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/folder5 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("folder5")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/removeemptyvariants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("removeemptyvariants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/folder3 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("folder3")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/variantsetoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("variantsetoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/variantsetnewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("variantsetnewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("@name_new")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/folder6 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("folder6")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/variantset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("variantset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/folder7 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("folder7")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/removereferences parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("removereferences")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/removepayloads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("removepayloads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/removeinherits parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("removeinherits")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/removespecializes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("removespecializes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/folder4 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("folder4")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/propertyoldname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("propertyoldname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/propertynewname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("propertynewname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/rename_root_prim/propertypattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/rename_root_prim")
    hou_parm = hou_node.parm("propertypattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/msg
    hou_node = hou_parent.createNode("error", "msg", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(6.60721, 2.63124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/msg/numerror parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/msg")
    hou_parm = hou_node.parm("numerror")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/msg/errormsg1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/msg")
    hou_parm = hou_node.parm("errormsg1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("Upstream Component Builder nodes expected, but not found. If you are using a Scene Import, or just want to use the input primitives, try the other Source modes.")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/msg/severity1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/msg")
    hou_parm = hou_node.parm("severity1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("warn")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/msg/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/msg")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("from husd import assetutils\n\nnode = hou.pwd()\ninput_node = node.parent().input(0)\nmode = node.parent().evalParm(\"mode\")\nnon_builder = False\nhas_builder_variant = False\nstage = node.inputs()[0].stage()\nif input_node and mode==0:\n    non_builder = input_node.type().name() not in assetutils.theComponentBuilderNodeTypes\n    info_prim = stage.GetPrimAtPath(\"/HoudiniLayerInfo\")\n    has_builder_variant = info_prim.HasAttribute('component:geo:lastnode')\nreturn not has_builder_variant and non_builder", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("from husd import assetutils\n\nnode = hou.pwd()\ninput_node = node.parent().input(0)\nmode = node.parent().evalParm(\"mode\")\nnon_builder = False\nhas_builder_variant = False\nstage = node.inputs()[0].stage()\nif input_node and mode==0:\n    non_builder = input_node.type().name() not in assetutils.theComponentBuilderNodeTypes\n    info_prim = stage.GetPrimAtPath(\"/HoudiniLayerInfo\")\n    has_builder_variant = info_prim.HasAttribute('component:geo:lastnode')\nreturn not has_builder_variant and non_builder", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("from husd import assetutils\n\nnode = hou.pwd()\ninput_node = node.parent().input(0)\nmode = node.parent().evalParm(\"mode\")\nnon_builder = False\nhas_builder_variant = False\nstage = node.inputs()[0].stage()\nif input_node and mode==0:\n    non_builder = input_node.type().name() not in assetutils.theComponentBuilderNodeTypes\n    info_prim = stage.GetPrimAtPath(\"/HoudiniLayerInfo\")\n    has_builder_variant = info_prim.HasAttribute('component:geo:lastnode')\nreturn not has_builder_variant and non_builder", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0.33333333333333331)
    hou_keyframe.useAccel(False)
    hou_keyframe.setSlopeAuto(True)
    hou_keyframe.setInSlopeAuto(True)
    hou_keyframe.setExpression("from husd import assetutils\n\nnode = hou.pwd()\ninput_node = node.parent().input(0)\nmode = node.parent().evalParm(\"mode\")\nnon_builder = False\nhas_builder_variant = False\nstage = node.inputs()[0].stage()\nif input_node and mode==0:\n    non_builder = input_node.type().name() not in assetutils.theComponentBuilderNodeTypes\n    info_prim = stage.GetPrimAtPath(\"/HoudiniLayerInfo\")\n    has_builder_variant = info_prim.HasAttribute('component:geo:lastnode')\nreturn not has_builder_variant and non_builder", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_mtls
    hou_node = hou_parent.createNode("primitive", "ensure_root_prim_exists_mtls", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(14.1013, 2.63124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_mtls/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_mtls")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_mtls/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_mtls")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_mtls/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_mtls")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_mtls/primtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_mtls")
    hou_parm = hou_node.parm("primtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_mtls/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_mtls")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_geo
    hou_node = hou_parent.createNode("primitive", "ensure_root_prim_exists_geo", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(6.60721, 1.63124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_geo/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_geo")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_geo/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_geo")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_geo/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_geo")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_geo/primtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_geo")
    hou_parm = hou_node.parm("primtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_prim_exists_geo/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_prim_exists_geo")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/set_layer_metadata
    hou_node = hou_parent.createNode("configurelayer", "set_layer_metadata", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(0.637754, -41.2272))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/set_layer_metadata/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_layer_metadata/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("y")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../upaxis\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../upaxis\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../upaxis\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../upaxis\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../metersperunit\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../metersperunit\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../metersperunit\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../metersperunit\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_layer_metadata/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_layer_metadata")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/reference_asset
    hou_node = hou_parent.createNode("reference::2.0", "reference_asset", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-17.3401, -41.5405))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/reference_asset/main_switcher1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("main_switcher1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/enable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("enable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/input_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("input_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/`@sourcename`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/primcount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("primcount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("file")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/files_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("files_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/parameterorder1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("parameterorder1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("filefirst")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/createprims1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("createprims1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/primpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("primpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/primcount1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("primcount1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/reftype1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("reftype1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("file")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/instanceable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("instanceable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/filepath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("filepath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../lopoutput\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/filerefprim1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("filerefprim1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("defaultPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/filerefprimpath1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("filerefprimpath1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/timeoffset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("timeoffset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference_asset/timescale1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference_asset")
    hou_parm = hou_node.parm("timescale1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/use_second_input
    hou_node = hou_parent.createNode("switch", "use_second_input", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-7.79961, -47.0873))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/use_second_input/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/use_second_input/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/use_second_input/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/use_second_input/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/use_second_input/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/use_second_input/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/use_second_input/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/use_second_input/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`opinput(\".\", @input)`")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/graft_second_input_for_export
    hou_node = hou_parent.createNode("graftstages", "graft_second_input_for_export", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-14.3941, -43.2804))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/graft_second_input_for_export/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_for_export")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_for_export/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_for_export")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("__automatic__")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_for_export/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_for_export")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_for_export/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_for_export")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_for_export/makeuniquepaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_for_export")
    hou_parm = hou_node.parm("makeuniquepaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_for_export/destpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_for_export")
    hou_parm = hou_node.parm("destpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/save_thumbnail_scene
    hou_node = hou_parent.createNode("usd_rop", "save_thumbnail_scene", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-14.5721, -51.1939))
    hou_node.bypass(False)
    hou_node.hide(False)
    hou_node.setLocked(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.ButtonParmTemplate("execute", "Save to Disk")
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"takecontrol": "always"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ButtonParmTemplate("executebackground", "Save to Disk in Background")
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"takecontrol": "always"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ButtonParmTemplate("renderdialog", "Controls...")
    hou_parm_template.hideLabel(True)
    hou_parm_template.setTags({"takecontrol": "always"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.MenuParmTemplate("trange", "Valid Frame Range", menu_items=(["off","normal","on","stage"]), menu_labels=(["Render Current Frame","Render Specific Frame Range","Render Specific Frame Range Only (Strict)","Render Frame Range From Stage"]), default_value=0, icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False, is_button_strip=False, strip_uses_icons=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FloatParmTemplate("f", "Start/End/Inc", 3, default_value=([1, 240, 1]), default_expression=(["$FSTART","$FEND",""]), default_expression_language=([hou.scriptLanguage.Hscript,hou.scriptLanguage.Hscript,hou.scriptLanguage.Hscript]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FloatParmTemplate("foffset", "Preroll/Postroll/Inc", 3, default_value=([0, 0, 1]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("take", "Render with Take", 1, default_value=(["_current_"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("loppath", "LOP Path", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.NodeReference, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setTags({"opfilter": "!!LOP!!", "oprelative": "."})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lopoutput", "Output File", 1, default_value=(["$HIP/geo/$HIPNAME.$OS.usd"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setTags({"filechooser_mode": "write"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("savestyle", "Save Style", 1, default_value=(["flattenimplicitlayers"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["flattenimplicitlayers","flattenalllayers","separate","flattenstage"]), menu_labels=(["Flatten Implicit Layers (Collapse Implicit Sublayers, Preserve References)","Flatten All Layers (Collapse All Sublayers, Preserve References)","Separate Layers (Preserve All Sublayers and References)","Flatten Stage (Collapse All Sublayers and References)"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("striplayerbreaks", "Strip Layers Above Layer Breaks", default_value=True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("strippostlayers", "Strip Post-Layers", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("fileperframe", "Flush Data After Each Frame", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("trackprimexistence", "Track Primitive Existence to Set Visibility", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("usenetworksafesave", "Use Network Drive Safe Save (Windows Only)", default_value=True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("filtertimesamples", "Filter Time Samples", 1, default_value=(["framerange"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["never","framerange","always"]), menu_labels=(["Never","When Using Frame Ranges","Always"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FloatParmTemplate("filtertimesamplespadding", "Extra Frames", 1, default_value=([0]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1)
    hou_parm_template.setConditional(hou.parmCondType.DisableWhen, "{ filtertimesamples == never } { filtertimesamples == framerange trange == off }")
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("extrafiles_group2", "Extra Files", folder_type=hou.folderType.Collapsible, default_value=0, ends_tab_group=False)
    hou_parm_template.setTags({"group_type": "collapsible"})
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("savepattern", "Files to Save", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("errorsavingimplicitpaths", "Error Saving Layers with Implicit Paths", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("savefilesfromdisk", "Save Updates to Modified Files From Disk", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("flattenfilelayers", "Flatten File Layers", default_value=False)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("flattensoplayers", "Flatten SOP Layers", default_value=False)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("outputprocessor_group2", "Output Processing", folder_type=hou.folderType.Collapsible, default_value=0, ends_tab_group=False)
    hou_parm_template.setTags({"group_type": "collapsible"})
    # Code for parameter template
    hou_parm_template2 = hou.MenuParmTemplate("outputprocessors", "Output Processors", menu_items=([]), menu_labels=([]), default_value=0, icon_names=([]), item_generator_script="import loputils\nnode = kwargs['node']\nreturn loputils.createOutputProcessorMenu(node)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False, is_button_strip=False, strip_uses_icons=False)
    hou_parm_template2.setScriptCallback("import loputils\nloputils.handleOutputProcessorAdd(kwargs)")
    hou_parm_template2.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template2.setTags({"script_callback": "import loputils\nloputils.handleOutputProcessorAdd(kwargs)", "script_callback_language": "python"})
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.FolderParmTemplate("simplerelativepaths_group", "Use Relative Paths", folder_type=hou.folderType.Simple, default_value=0, ends_tab_group=False)
    hou_parm_template2.setTags({"group_type": "simple"})
    # Code for parameter template
    hou_parm_template3 = hou.ToggleParmTemplate("enableoutputprocessor_simplerelativepaths", "Enable", default_value=True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.LabelParmTemplate("simplerelativepaths_spacer", "Spacer", column_labels=([""]))
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("simplerelativepaths_moveup", "Move Up")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setJoinWithNext(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_up", "script_callback": "import loputils\nloputils.handleOutputProcessorMoveUp(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    # Code for parameter template
    hou_parm_template3 = hou.ButtonParmTemplate("simplerelativepaths_remove", "Remove")
    hou_parm_template3.hideLabel(True)
    hou_parm_template3.setScriptCallback("import loputils\nloputils.handleOutputProcessorRemove(kwargs)")
    hou_parm_template3.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template3.setTags({"button_icon": "BUTTONS_delete", "script_callback": "import loputils\nloputils.handleOutputProcessorRemove(kwargs)", "script_callback_language": "python"})
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("layermetadata_group2", "Layer Metadata", folder_type=hou.folderType.Collapsible, default_value=0, ends_tab_group=False)
    hou_parm_template.setTags({"group_type": "collapsible"})
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("defaultprim", "Default Primitive", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import loputils\nloppath = kwargs['node'].parm('loppath').evalAsString()\nlop = kwargs['node'].node(loppath)\nstage = lop.stage() if lop else None\nreturn loputils.createRootPrimMenu(stage)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("requiredefaultprim", "Error Saving Layer with No Default Primitive", default_value=False)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("savetimeinfo", "Save ROP's Time Information to Output", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("clearhoudinicustomdata", "Clear Houdini-Specific Custom Data", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("ensuremetricsset", "Ensure Basic Metrics Are Set on All Layers", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("contextoptions_group2", "Context Options", folder_type=hou.folderType.Collapsible, default_value=0, ends_tab_group=False)
    hou_parm_template.setTags({"group_type": "collapsible"})
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("setropcook", "Set ROP Cook Context Option", default_value=True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.FolderParmTemplate("optioncount", "Number of Options", folder_type=hou.folderType.MultiparmBlock, default_value=1, ends_tab_group=False)
    # Code for parameter template
    hou_parm_template3 = hou.FolderParmTemplate("optiongroup#", "", folder_type=hou.folderType.Simple, default_value=0, ends_tab_group=False)
    hou_parm_template3.setTags({"group_type": "simple"})
    # Code for parameter template
    hou_parm_template4 = hou.ToggleParmTemplate("optionenable#", "Enable", default_value=True)
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    # Code for parameter template
    hou_parm_template4 = hou.StringParmTemplate("optionname#", "Option Name", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template4.setJoinWithNext(True)
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    # Code for parameter template
    hou_parm_template4 = hou.StringParmTemplate("optiontype#", "Option Type", 1, default_value=(["string"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["string","float"]), menu_labels=(["String","Number"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    # Code for parameter template
    hou_parm_template4 = hou.StringParmTemplate("optionstrvalue#", "Option Value", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ optiontype# != string }")
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    # Code for parameter template
    hou_parm_template4 = hou.FloatParmTemplate("optionfloatvalue#", "Option Value", 1, default_value=([0]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1)
    hou_parm_template4.setConditional(hou.parmCondType.HideWhen, "{ optiontype# != float }")
    hou_parm_template3.addParmTemplate(hou_parm_template4)
    hou_parm_template2.addParmTemplate(hou_parm_template3)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.SeparatorParmTemplate("separator_scripts")
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("tprerender", "Pre-Render Script", default_value=True)
    hou_parm_template.hideLabel(True)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("prerender", "Pre-Render Script", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"filechooser_mode": "read"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lprerender", "Pre-Render Script Language", 1, default_value=(["hscript"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["hscript","python"]), menu_labels=(["Hscript","Python"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.hideLabel(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("tpreframe", "Pre-Frame Script", default_value=True)
    hou_parm_template.hideLabel(True)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("preframe", "Pre-Frame Script", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"filechooser_mode": "read"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lpreframe", "Pre-Frame Script Language", 1, default_value=(["hscript"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["hscript","python"]), menu_labels=(["Hscript","Python"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.hideLabel(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("tpostframe", "Post-Frame Script", default_value=True)
    hou_parm_template.hideLabel(True)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("postframe", "Post-Frame Script", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"filechooser_mode": "read"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lpostframe", "Post-Frame Script Language", 1, default_value=(["hscript"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["hscript","python"]), menu_labels=(["Hscript","Python"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.hideLabel(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("tpostrender", "Post-Render Script", default_value=True)
    hou_parm_template.hideLabel(True)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("postrender", "Post-Render Script", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.FileReference, file_type=hou.fileType.Any, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setJoinWithNext(True)
    hou_parm_template.setTags({"filechooser_mode": "read"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("lpostrender", "Post-Render Script Language", 1, default_value=(["hscript"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=(["hscript","python"]), menu_labels=(["Hscript","Python"]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.hideLabel(True)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("initsim", "Initialize Simulation OPs", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("alfprogress", "Alfred Style Progress", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("reportnetwork", "Report Network Use", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("outputprocessor_removehfs", "Remove Houdini Install Directory from Asset Paths", default_value=True)
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/save_thumbnail_scene/execute parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("execute")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executesavethumbnail\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executesavethumbnail\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executesavethumbnail\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executesavethumbnail\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/executebackground parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("executebackground")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/renderdialog parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("renderdialog")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/trange parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("trange")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm_tuple = hou_node.parmTuple("f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/foffset parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm_tuple = hou_node.parmTuple("foffset")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((0, 0, 1))
    hou_parm_tuple.setAutoscope((False, False, False))


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/take parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("take")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("_current_")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../`opinput(\".\", 0)`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/lopoutput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("lopoutput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"../lopoutput\"),chs(\"../filename\"),\"Thumbnail.usda\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/savestyle parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("savestyle")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("flattenimplicitlayers")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/striplayerbreaks parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("striplayerbreaks")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/strippostlayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("strippostlayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/fileperframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("fileperframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/trackprimexistence parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("trackprimexistence")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/usenetworksafesave parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("usenetworksafesave")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/filtertimesamples parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("filtertimesamples")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("never")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/filtertimesamplespadding parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("filtertimesamplespadding")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/extrafiles_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("extrafiles_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/savepattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("savepattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/errorsavingimplicitpaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("errorsavingimplicitpaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/savefilesfromdisk parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("savefilesfromdisk")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/flattenfilelayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("flattenfilelayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/flattensoplayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("flattensoplayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/outputprocessor_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("outputprocessor_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/outputprocessor_removehfs parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("outputprocessor_removehfs")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/outputprocessors parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("outputprocessors")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("localizeassets")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/layermetadata_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("layermetadata_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/requiredefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("requiredefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/savetimeinfo parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("savetimeinfo")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/clearhoudinicustomdata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("clearhoudinicustomdata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/ensuremetricsset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("ensuremetricsset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/contextoptions_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("contextoptions_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/setropcook parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("setropcook")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/optioncount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("optioncount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/tprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("tprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/prerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("prerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/lprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("lprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/tpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("tpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/preframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("preframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/lpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("lpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/tpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("tpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/postframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("postframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/lpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("lpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/tpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("tpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/postrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("postrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/lpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("lpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/initsim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("initsim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/alfprogress parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("alfprogress")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/reportnetwork parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("reportnetwork")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/optiongroup1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("optiongroup1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/optionenable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("optionenable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/optionname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("optionname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("EXPORT_THUMBNAIL_SCENE")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/optiontype1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("optiontype1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("float")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/optionstrvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("optionstrvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/optionfloatvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("optionfloatvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailexportlayer\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailexportlayer\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailexportlayer\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailexportlayer\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/extrafiles_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("extrafiles_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/outputprocessor_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("outputprocessor_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/simplerelativepaths_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("simplerelativepaths_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/enableoutputprocessor_simplerelativepaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("enableoutputprocessor_simplerelativepaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/simplerelativepaths_moveup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("simplerelativepaths_moveup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/simplerelativepaths_remove parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("simplerelativepaths_remove")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/layermetadata_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("layermetadata_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/save_thumbnail_scene/contextoptions_group2 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/save_thumbnail_scene")
    hou_parm = hou_node.parm("contextoptions_group2")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/use_second_input_export
    hou_node = hou_parent.createNode("switch", "use_second_input_export", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-14.5721, -46.8437))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/use_second_input_export/chooseinputbyname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input_export")
    hou_parm = hou_node.parm("chooseinputbyname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../use_second_input/chooseinputbyname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../use_second_input/chooseinputbyname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../use_second_input/chooseinputbyname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../use_second_input/chooseinputbyname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/use_second_input_export/input parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input_export")
    hou_parm = hou_node.parm("input")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailscenesource\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailscenesource\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailscenesource\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../thumbnailscenesource\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/use_second_input_export/selectinputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input_export")
    hou_parm = hou_node.parm("selectinputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectinputname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectinputname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectinputname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectinputname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/use_second_input_export/selectinputvalue parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input_export")
    hou_parm = hou_node.parm("selectinputvalue")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectinputvalue\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectinputvalue\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectinputvalue\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectinputvalue\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/use_second_input_export/badinput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input_export")
    hou_parm = hou_node.parm("badinput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("ignore")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/badinput\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/badinput\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/badinput\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/badinput\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/use_second_input_export/fallback parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input_export")
    hou_parm = hou_node.parm("fallback")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../use_second_input/fallback\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../use_second_input/fallback\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../use_second_input/fallback\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../use_second_input/fallback\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/use_second_input_export/selectfallbackname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input_export")
    hou_parm = hou_node.parm("selectfallbackname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectfallbackname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectfallbackname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectfallbackname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/selectfallbackname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/use_second_input_export/inputname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/use_second_input_export")
    hou_parm = hou_node.parm("inputname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("add_thumbnail_files")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/inputname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/inputname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/inputname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../use_second_input/inputname\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setComment("Referenced from second_input")
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("referenced_from", "../second_input")
    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/auto_thumbnail_camera_for_export
    hou_node = hou_parent.createNode("pythonscript", "auto_thumbnail_camera_for_export", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-17.3389, -44.4387))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("python", "Python Code", 1, default_value=(["# Use the drop down menu to select example code snippets.\nnode = hou.pwd()\n\n# Add code to fetch node parameters and evaluate primitive patterns.\n# This should be done before calling editableStage or editableLayer.\n# paths = hou.LopSelectionRule(\"/*\").expandedPaths(node.input(0))\n\n# Add code to modify the stage.\nstage = node.editableStage()\n"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import pythonscriptmenu\n\nreturn pythonscriptmenu.buildSnippetMenu('Lop/pythonscript/python', kwargs=kwargs)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setTags({"editor": "1", "editorlang": "python", "editorlines": "20-50"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("asset", "asset", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template.setScriptCallbackLanguage(hou.scriptLanguage.Python)
    hou_parm_template.setTags({"script_callback_language": "python"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("maintainstate", "Maintain State", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/auto_thumbnail_camera_for_export/python parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/auto_thumbnail_camera_for_export")
    hou_parm = hou_node.parm("python")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("from husd import assetutils\nfrom pxr import Usd, Gf, UsdGeom\n\nnode = hou.pwd()\nstage = node.editableStage()\n\n# Add code to modify the stage.\n# Use drop down menu to select examples.\nspin = node.node(\"..\").evalParm(\"spin\")\npitch = node.node(\"..\").evalParm(\"pitch\")\ndist = node.node(\"..\").evalParm(\"dist\")\n\nrotatex=25+pitch\nrotatey=-35+spin\n_prim_path = node.evalParm('asset')\nif not _prim_path.startswith('/'):\n    _prim_path = '/' + _prim_path\nprim = stage.GetPrimAtPath(node.evalParm('asset'))\n# Use the BBoxCache instead; directly using extentsHint is annoying/painful\nbbox_cache = UsdGeom.BBoxCache(Usd.TimeCode.EarliestTime(), ['default', 'render'])\nbounds = bbox_cache.ComputeLocalBound(prim).GetBox()\nassetutils.createFramedCameraToBounds(stage, bounds, assetutils.theThumbnailCameraPrimPath, rotatex=rotatex, rotatey=rotatey, offsetdistance=dist)")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../auto_thumbnail_camera/python\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../auto_thumbnail_camera/python\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../auto_thumbnail_camera/python\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../auto_thumbnail_camera/python\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/auto_thumbnail_camera_for_export/maintainstate parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/auto_thumbnail_camera_for_export")
    hou_parm = hou_node.parm("maintainstate")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../auto_thumbnail_camera/maintainstate\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../auto_thumbnail_camera/maintainstate\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../auto_thumbnail_camera/maintainstate\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../auto_thumbnail_camera/maintainstate\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/auto_thumbnail_camera_for_export/asset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/auto_thumbnail_camera_for_export")
    hou_parm = hou_node.parm("asset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/componentoutput_custom")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../auto_thumbnail_camera/asset\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../auto_thumbnail_camera/asset\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../auto_thumbnail_camera/asset\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../auto_thumbnail_camera/asset\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setComment("Referenced from auto_thumbnail_camera")
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("referenced_from", "../auto_thumbnail_camera")
    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/graft_second_input_temp
    hou_node = hou_parent.createNode("graftstages", "graft_second_input_temp", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(0.636504, -43.8352))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.IntParmTemplate("lop_activation", "Activation", 1, default_value=([1]), min=0, max=1, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("primpath", "Primitive Path", 1, default_value=(["`lopinputprim('.', 0)`"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import loputils\nreturn loputils.createPrimPathMenu()", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template.setTags({"script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, False)", "script_action_help": "Select a primitive in the Scene Viewer or Scene Graph Tree pane.\nCtrl-click to select using the primitive picker dialog.\nAlt-click to toggle movement of the display flag.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "prim"})
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("primkind", "Primitive Kind", 1, default_value=(["__automatic__"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import loputils\nreturn loputils.createKindsMenu(True, True)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("parentprimtype", "Parent Primitive Type", 1, default_value=(["UsdGeomXform"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import loputils\nreturn loputils.createParentTypesMenu()", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.ToggleParmTemplate("makeuniquepaths", "Make Destination Primitive Paths Unique", default_value=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("destpath", "Destination Path Default", 1, default_value=(["/`opinput(\".\", @input)`"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import expressionmenu\nreturn expressionmenu.buildExpressionsMenu(\n    'Lop/mergeinsert/destpath')", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.StringParmTemplate("specifier", "Primitive Specifier", 1, default_value=(["def"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import loputils\nreturn loputils.createSpecifiersMenu()", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal)
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/graft_second_input_temp/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_temp")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_temp/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_temp")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("__automatic__")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_temp/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_temp")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_temp/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_temp")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_temp/makeuniquepaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_temp")
    hou_parm = hou_node.parm("makeuniquepaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_temp/destpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_temp")
    hou_parm = hou_node.parm("destpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/graft_second_input_temp/lop_activation parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/graft_second_input_temp")
    hou_parm = hou_node.parm("lop_activation")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/__thumbnail_scene
    hou_node = hou_parent.createNode("configurelayer", "__thumbnail_scene", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-7.9825, -40.3246))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/__thumbnail_scene/setsavepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setsavepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/savepath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("savepath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setdefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setdefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setcomment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setcomment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/comment parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("comment")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setstarttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setstarttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/starttime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("starttime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setendtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setendtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/endtime parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("endtime")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(240)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/settimepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("settimepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/timepersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("timepersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setframespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setframespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/framespersecond parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("framespersecond")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(24)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(24)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FPS", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setupaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setupaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/upaxis parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("upaxis")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("z")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setmetersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setmetersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/metersperunit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("metersperunit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0.01)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setcolorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setcolorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/colorconfig parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("colorconfig")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setcolormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setcolormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/colormanagementsystem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("colormanagementsystem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("OpenColorIO")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setrendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setrendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/customdatacount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("customdatacount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/stagevariablescount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("stagevariablescount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setstagemetadata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setstagemetadata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/flattenop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("flattenop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("layer")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/startnewlayer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("startnewlayer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/__thumbnail_scene/setinputlayerexplicit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/__thumbnail_scene")
    hou_parm = hou_node.parm("setinputlayerexplicit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection
    hou_node = hou_parent.createNode("setvariant", "clear_the_geo_variant_selection", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(6.60721, -0.36876))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.IntParmTemplate("lop_activation", "Activation", 1, default_value=([1]), min=0, max=1, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("num_variants", "Number of Variants", folder_type=hou.folderType.MultiparmBlock, default_value=1, ends_tab_group=False)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("enable#", "Enable", default_value=True)
    hou_parm_template2.hideLabel(True)
    hou_parm_template2.setJoinWithNext(True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("primpattern#", "Primitives", 1, default_value=(["`lopinputprims('.', 0)`"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import loputils\nreturn loputils.createPrimPatternMenu(kwargs['node'], 0)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringToggle)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }")
    hou_parm_template2.setTags({"script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, True)", "script_action_help": "Select primitives in the Scene Viewer or Scene Graph Tree pane.\nCtrl-click to select using the primitive picker dialog.\nShift-click to select using the primitive pattern editor.\nAlt-click to toggle movement of the display flag.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "primlist"})
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("variantsetuseindex#", "Choose Variant Set by Index", default_value=False)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("variantset#", "Variant Set", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ variantsetuseindex# != 0 } { enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.IntParmTemplate("variantsetindex#", "Variant Set Index", 1, default_value=([0]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ variantsetuseindex# == 0 } { enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("variantnameuseindex#", "Choose Variant Name by Index", default_value=False)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("variantname#", "Variant Name", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ variantnameuseindex# != 0 } { enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.IntParmTemplate("variantnameindex#", "Variant Name Index", 1, default_value=([0]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ variantnameuseindex# == 0 } { enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/num_variants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("num_variants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/primpattern1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("primpattern1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("chs(\"../rootprim\")")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/variantsetuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("variantsetuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/variantset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("variantset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvset = 'geo'\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvset = 'geo'\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvset = 'geo'\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvset = 'geo'\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:geo:variantset\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/variantsetindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("variantsetindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/variantnameuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("variantnameuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/variantname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("variantname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/variantnameindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("variantnameindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_geo_variant_selection/lop_activation parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_geo_variant_selection")
    hou_parm = hou_node.parm("lop_activation")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setvariantsinside\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setvariantsinside\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setvariantsinside\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setvariantsinside\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection
    hou_node = hou_parent.createNode("setvariant", "clear_the_mtl_variant_selection", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(14.1013, -0.36876))
    hou_node.hide(False)
    hou_node.setSelected(False)

    hou_parm_template_group = hou.ParmTemplateGroup()
    # Code for parameter template
    hou_parm_template = hou.IntParmTemplate("lop_activation", "Activation", 1, default_value=([1]), min=0, max=1, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False)
    hou_parm_template_group.append(hou_parm_template)
    # Code for parameter template
    hou_parm_template = hou.FolderParmTemplate("num_variants", "Number of Variants", folder_type=hou.folderType.MultiparmBlock, default_value=1, ends_tab_group=False)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("enable#", "Enable", default_value=True)
    hou_parm_template2.hideLabel(True)
    hou_parm_template2.setJoinWithNext(True)
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("primpattern#", "Primitives", 1, default_value=(["`lopinputprims('.', 0)`"]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="import loputils\nreturn loputils.createPrimPatternMenu(kwargs['node'], 0)", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringToggle)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }")
    hou_parm_template2.setTags({"script_action": "import loputils\nloputils.selectPrimsInParm(kwargs, True)", "script_action_help": "Select primitives in the Scene Viewer or Scene Graph Tree pane.\nCtrl-click to select using the primitive picker dialog.\nShift-click to select using the primitive pattern editor.\nAlt-click to toggle movement of the display flag.", "script_action_icon": "BUTTONS_reselect", "sidefx::usdpathtype": "primlist"})
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("variantsetuseindex#", "Choose Variant Set by Index", default_value=False)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("variantset#", "Variant Set", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ variantsetuseindex# != 0 } { enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.IntParmTemplate("variantsetindex#", "Variant Set Index", 1, default_value=([0]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ variantsetuseindex# == 0 } { enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.ToggleParmTemplate("variantnameuseindex#", "Choose Variant Name by Index", default_value=False)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.StringParmTemplate("variantname#", "Variant Name", 1, default_value=([""]), naming_scheme=hou.parmNamingScheme.Base1, string_type=hou.stringParmType.Regular, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.StringReplace)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ variantnameuseindex# != 0 } { enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    # Code for parameter template
    hou_parm_template2 = hou.IntParmTemplate("variantnameindex#", "Variant Name Index", 1, default_value=([0]), min=0, max=10, min_is_strict=False, max_is_strict=False, look=hou.parmLook.Regular, naming_scheme=hou.parmNamingScheme.Base1, menu_items=([]), menu_labels=([]), icon_names=([]), item_generator_script="", item_generator_script_language=hou.scriptLanguage.Python, menu_type=hou.menuType.Normal, menu_use_token=False)
    hou_parm_template2.setConditional(hou.parmCondType.DisableWhen, "{ variantnameuseindex# == 0 } { enable# == 0 }")
    hou_parm_template.addParmTemplate(hou_parm_template2)
    hou_parm_template_group.append(hou_parm_template)
    hou_node.setParmTemplateGroup(hou_parm_template_group)
    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/num_variants parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("num_variants")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/enable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("enable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/primpattern1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("primpattern1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("chs(\"../rootprim\")")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/variantsetuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("variantsetuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/variantset1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("variantset1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(True)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvset = 'mtl'\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvset = 'mtl'\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvset = 'mtl'\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("import loputils\n\nvset = 'mtl'\n\nthis_node = hou.pwd()\nmanual = this_node.parent().evalParm(\"mode\")\ninput_node = this_node.node(\"../IN\")\nif input_node and this_node.parent().inputs() and not manual:\n    x = loputils.fetchParameterValues(input_node, \"component:mtl:variantset\")\n    if x:\n        value = str(x)\n\nreturn value", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/variantsetindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("variantsetindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/variantnameuseindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("variantnameuseindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/variantname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("variantname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(True)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/variantnameindex1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("variantnameindex1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/clear_the_mtl_variant_selection/lop_activation parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/clear_the_mtl_variant_selection")
    hou_parm = hou_node.parm("lop_activation")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setvariantsinside\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setvariantsinside\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setvariantsinside\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../setvariantsinside\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/ensure_root_xform_prim
    hou_node = hou_parent.createNode("primitive", "ensure_root_xform_prim", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(14.1013, 0.63124))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/ensure_root_xform_prim/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_xform_prim")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"../rootprim\"),\"/\",\"\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_xform_prim/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_xform_prim")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_xform_prim/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_xform_prim")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_xform_prim/primtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_xform_prim")
    hou_parm = hou_node.parm("primtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/ensure_root_xform_prim/specifier parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/ensure_root_xform_prim")
    hou_parm = hou_node.parm("specifier")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("def")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/thumbnail_render
    hou_node = hou_parent.createNode("usdrender_rop", "thumbnail_render", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-7.79961, -50.5416))
    hou_node.bypass(False)
    hou_node.hide(False)
    hou_node.setLocked(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/thumbnail_render/execute parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("execute")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("ch(\"../executerender\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/thumbnail_render/renderpreview parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("renderpreview")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/executebackground parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("executebackground")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/renderdialog parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("renderdialog")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/trange parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("trange")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm_tuple = hou_node.parmTuple("f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(1)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FSTART", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(240)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("$FEND", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/thumbnail_render/foffset parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm_tuple = hou_node.parmTuple("foffset")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((0, 0, 1))
    hou_parm_tuple.setAutoscope((False, False, False))


    # Code for /stage/componentoutput_custom/thumbnail_render/allframesatonce parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("allframesatonce")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/take parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("take")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("_current_")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/renderer parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("renderer")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("BRAY_HdKarmaXPU")
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../renderer\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../renderer\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../renderer\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.StringKeyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setExpression("chs(\"../renderer\")", hou.exprLanguage.Hscript)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_gpu parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_gpu")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/loppath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("loppath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("../THUMBNAIL")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/rendersettings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("rendersettings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/renderpass parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("renderpass")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/override_camera parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("override_camera")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/outputimage parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("outputimage")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`strreplace(chs(\"../lopoutput\"),chs(\"../filename\"),\"thumbnail.png\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/outputimageshowwarning parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("outputimageshowwarning")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("pwd().evalParm(\"allframesatonce\") != 0 and pwd().evalParm(\"outputimage\") == hou.text.expandHuskFilePath(pwd().evalParm(\"outputimage\")) and pwd().evalParm(\"outputimage\") != 'ip' and pwd().evalParm(\"outputimage\") != 'md'", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("pwd().evalParm(\"allframesatonce\") != 0 and pwd().evalParm(\"outputimage\") == hou.text.expandHuskFilePath(pwd().evalParm(\"outputimage\")) and pwd().evalParm(\"outputimage\") != 'ip' and pwd().evalParm(\"outputimage\") != 'md'", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("pwd().evalParm(\"allframesatonce\") != 0 and pwd().evalParm(\"outputimage\") == hou.text.expandHuskFilePath(pwd().evalParm(\"outputimage\")) and pwd().evalParm(\"outputimage\") != 'ip' and pwd().evalParm(\"outputimage\") != 'md'", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("pwd().evalParm(\"allframesatonce\") != 0 and pwd().evalParm(\"outputimage\") == hou.text.expandHuskFilePath(pwd().evalParm(\"outputimage\")) and pwd().evalParm(\"outputimage\") != 'ip' and pwd().evalParm(\"outputimage\") != 'md'", hou.exprLanguage.Python)
    hou_parm.setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/thumbnail_render/override_res parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("override_res")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/res_scale parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("res_scale")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(100)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/res_scale_menu parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("res_scale_menu")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("10")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/res_user parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm_tuple = hou_node.parmTuple("res_user")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1280, 720))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/thumbnail_render/res_userMenu parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("res_userMenu")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("640 480 1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/_tabs1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("_tabs1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/_husk_tabs1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("_husk_tabs1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_instantshutter parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_instantshutter")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_enable_headlight parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_enable_headlight")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_headlight parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_headlight")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("distant")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_dopopulationmask parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_dopopulationmask")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_populationmask parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_populationmask")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_rendersettingsandcams parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_rendersettingsandcams")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_purpose parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_purpose")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("geometry,render")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_complexity parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_complexity")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("veryhigh")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_legacyexr parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_legacyexr")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_delegateprod parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_delegateprod")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_restartdelegate parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_restartdelegate")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_restartdelegateframes parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_restartdelegateframes")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/dosnapshot parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("dosnapshot")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/snapshotinterval parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("snapshotinterval")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(300)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_dotimelimit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_dotimelimit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_timelimit parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_timelimit")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(6)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_timelimitperimage parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_timelimitperimage")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_metadata_key parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_metadata_key")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_metadata_value parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_metadata_value")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_mplayname parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_mplayname")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_mplay parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_mplay")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_mplayaovs parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_mplayaovs")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("-")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_mplayzoom parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_mplayzoom")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(100)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_mplayzoommenu parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_mplayzoommenu")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("10")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tex_res parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tex_res")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("-1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tex_memmode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tex_memmode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tex_mem parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tex_mem")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2048)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tex_mempct parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tex_mempct")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(50)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tex_filemode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tex_filemode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("off")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tex_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tex_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(512)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tex_filespct parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tex_filespct")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(50)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tex_filesreserve parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tex_filesreserve")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(128)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_prerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_prerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_preframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_preframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tpresnapshot parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tpresnapshot")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_presnapshot parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_presnapshot")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tpostsnapshot parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tpostsnapshot")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_postsnapshot parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_postsnapshot")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_postframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_postframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_postrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_postrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tile parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tile")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_autotile parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_autotile")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tilemaxres parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm_tuple = hou_node.parmTuple("husk_tilemaxres")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((65536, 65536))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tiletempdir parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tiletempdir")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HOUDINI_TEMP_DIR")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tilecount parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm_tuple = hou_node.parmTuple("husk_tilecount")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((4, 4))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tileindex parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tileindex")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_tilesuffix parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_tilesuffix")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("_tile%02d")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_debug parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_debug")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/verbose parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("verbose")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/verbose_menu parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("verbose_menu")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/vexprofile parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("vexprofile")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/windowsconsole parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("windowsconsole")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_usdtrace parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_usdtrace")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_chromefile parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_chromefile")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_log parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_log")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_logappend parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_logappend")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_stdout parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_stdout")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_stderr parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_stderr")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/husk_slapcomp parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("husk_slapcomp")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/runcommand parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("runcommand")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/rendercommand parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("rendercommand")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("husk --res `chs(\"../res1\")` `chs(\"../res2\")` --autoheadlight --camera `chs(\"../THUMBNAIL/thumbnailcamera\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/dorenderexisting parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("dorenderexisting")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/renderexisting parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("renderexisting")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/renderexistingandsaveusd parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("renderexistingandsaveusd")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/resolvercontext parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("resolvercontext")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(strcat(opcreator(chs(\"loppath\")), \"/resolvercontextassetpath\"))`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/resolvercontextstringcount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("resolvercontextstringcount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/variantselectioncount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("variantselectioncount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/soho_foreground parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("soho_foreground")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/alfprogress parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("alfprogress")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/mkpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("mkpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/domaxthreads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("domaxthreads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/maxthreads parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("maxthreads")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(-1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/initsim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("initsim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/reportnetwork parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("reportnetwork")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/usdexport_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("usdexport_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/lopoutput parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("lopoutput")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("__render__.usd")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/deletefiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("deletefiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("intempdir")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/savestyle parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("savestyle")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("flattenimplicitlayers")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/striplayerbreaks parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("striplayerbreaks")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/strippostlayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("strippostlayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/trackprimexistence parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("trackprimexistence")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/usenetworksafesave parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("usenetworksafesave")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/filtertimesamples parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("filtertimesamples")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("never")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/filtertimesamplespadding parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("filtertimesamplespadding")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/extrafiles_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("extrafiles_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/savepattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("savepattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/errorsavingimplicitpaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("errorsavingimplicitpaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/savefilesfromdisk parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("savefilesfromdisk")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/flattenfilelayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("flattenfilelayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/flattensoplayers parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("flattensoplayers")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/outputprocessor_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("outputprocessor_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/outputprocessor_removehfs parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("outputprocessor_removehfs")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/outputprocessors parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("outputprocessors")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("localizeassets")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/savetodirectory_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("savetodirectory_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/enableoutputprocessor_savetodirectory parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("enableoutputprocessor_savetodirectory")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/savetodirectory_directory parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("savetodirectory_directory")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("$HOUDINI_TEMP_DIR/usd_renders/$RENDERID")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/simplerelativepaths_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("simplerelativepaths_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/enableoutputprocessor_simplerelativepaths parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("enableoutputprocessor_simplerelativepaths")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/matchoutputextension_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("matchoutputextension_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/enableoutputprocessor_matchoutputextension parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("enableoutputprocessor_matchoutputextension")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/layermetadata_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("layermetadata_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/defaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("defaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/requiredefaultprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("requiredefaultprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/savetimeinfo parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("savetimeinfo")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/clearhoudinicustomdata parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("clearhoudinicustomdata")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/ensuremetricsset parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("ensuremetricsset")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/contextoptions_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("contextoptions_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/setropcook parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("setropcook")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/optioncount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("optioncount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/tprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("tprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/prerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("prerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/lprerender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("lprerender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/tpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("tpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/preframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("preframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/lpreframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("lpreframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/tpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("tpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/postframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("postframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/lpostframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("lpostframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/tpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("tpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/postrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("postrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/lpostrender parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("lpostrender")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("hscript")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/optiongroup1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("optiongroup1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/optionenable1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("optionenable1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/optionname1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("optionname1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("RENDER_THUMBNAIL")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/optiontype1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("optiontype1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("float")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/optionstrvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("optionstrvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/thumbnail_render/optionfloatvalue1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/thumbnail_render")
    hou_parm = hou_node.parm("optionfloatvalue1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/add_thumbnail_files
    hou_node = hou_parent.createNode("pythonscript", "add_thumbnail_files", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-8.35987, -44.9784))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/add_thumbnail_files/python parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_thumbnail_files")
    hou_parm = hou_node.parm("python")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("from husd import assetutils\n\n# We need to find any of the \"Thumbnail\" files on HFS/HOUDINI_PATH, and\n# layer them into the scene.\nthumbnail_files = None\n\ntry:\n    thumbnail_files = hou.findFiles(assetutils.theThumbnailFileName)\nexcept:\n    # hou.findFiles raises an exception if it doesn't find any matching\n    # files, ignore it\n    pass\n\nif thumbnail_files:\n    node = hou.pwd()\n    stage = node.editableStage()\n\n    for thumbnail in thumbnail_files:\n        node.addSubLayer(thumbnail)")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/add_thumbnail_files/maintainstate parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/add_thumbnail_files")
    hou_parm = hou_node.parm("maintainstate")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/copy_display_color_property
    hou_node = hou_parent.createNode("copyproperty", "copy_display_color_property", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-10.3557, -27.1477))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/copy_display_color_property/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("%type:Mesh")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property/separatedestprimpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property")
    hou_parm = hou_node.parm("separatedestprimpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property/destprimpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property")
    hou_parm = hou_node.parm("destprimpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property/propertycopycount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property")
    hou_parm = hou_node.parm("propertycopycount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property/sourceprop1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property")
    hou_parm = hou_node.parm("sourceprop1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("primvars:displayColor")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property/destprop1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property")
    hou_parm = hou_node.parm("destprop1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("primvars:displayColor")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property/copymetadata1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property")
    hou_parm = hou_node.parm("copymetadata1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property/blocksource1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property")
    hou_parm = hou_node.parm("blocksource1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/set_paylod_bbox_color
    hou_node = hou_parent.createNode("attribwrangle", "set_paylod_bbox_color", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-10.3587, -27.9694))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("single")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/allowinstanceproxies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("allowinstanceproxies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/runonarrays parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("runonarrays")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/lengthhint parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("lengthhint")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("auto")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/lengthattrib parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("lengthattrib")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/folder01 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("folder01")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/snippet parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("snippet")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("vector drawColor = usd_attribelement(0, @primpath, \"primvars:displayColor\", 0);\nusd_setattrib(0, @primpath, \"model:drawModeColor\", drawColor);")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/exportlist parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("exportlist")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/strict parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("strict")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/autobind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("autobind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/bindings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("bindings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/vex_cwdpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("vex_cwdpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(".")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color/vex_outputmask parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color")
    hou_parm = hou_node.parm("vex_outputmask")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1
    hou_node = hou_parent.createNode("attribwrangle", "set_paylod_bbox_color1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-4.19827, -25.9846))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("single")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/allowinstanceproxies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("allowinstanceproxies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/runonarrays parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("runonarrays")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/lengthhint parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("lengthhint")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("auto")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/lengthattrib parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("lengthattrib")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/folder01 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("folder01")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/snippet parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("snippet")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("vector drawColor = usd_attribelement(0, @primpath, \"primvars:displayColor\", 0);\nusd_setattrib(0, @primpath, \"model:drawModeColor\", drawColor);")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/exportlist parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("exportlist")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/strict parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("strict")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/autobind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("autobind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/bindings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("bindings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/vex_cwdpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("vex_cwdpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(".")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color1/vex_outputmask parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color1")
    hou_parm = hou_node.parm("vex_outputmask")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/copy_display_color_property1
    hou_node = hou_parent.createNode("copyproperty", "copy_display_color_property1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-4.19527, -25.1629))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/copy_display_color_property1/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property1")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("%type:Mesh")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property1/separatedestprimpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property1")
    hou_parm = hou_node.parm("separatedestprimpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property1/destprimpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property1")
    hou_parm = hou_node.parm("destprimpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property1/propertycopycount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property1")
    hou_parm = hou_node.parm("propertycopycount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property1/sourceprop1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property1")
    hou_parm = hou_node.parm("sourceprop1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("primvars:displayColor")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property1/destprop1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property1")
    hou_parm = hou_node.parm("destprop1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("primvars:displayColor")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property1/copymetadata1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property1")
    hou_parm = hou_node.parm("copymetadata1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property1/blocksource1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property1")
    hou_parm = hou_node.parm("blocksource1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2
    hou_node = hou_parent.createNode("attribwrangle", "set_paylod_bbox_color2", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-15.7929, -20.7468))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("single")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/allowinstanceproxies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("allowinstanceproxies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/runonarrays parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("runonarrays")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/lengthhint parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("lengthhint")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("auto")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/lengthattrib parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("lengthattrib")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/folder01 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("folder01")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/snippet parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("snippet")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("vector drawColor = usd_attribelement(0, @primpath, \"primvars:displayColor\", 0);\nusd_setattrib(0, @primpath, \"model:drawModeColor\", drawColor);")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/exportlist parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("exportlist")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/strict parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("strict")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/autobind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("autobind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/bindings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("bindings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/vex_cwdpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("vex_cwdpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(".")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color2/vex_outputmask parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color2")
    hou_parm = hou_node.parm("vex_outputmask")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/copy_display_color_property2
    hou_node = hou_parent.createNode("copyproperty", "copy_display_color_property2", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-15.7899, -19.9251))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/copy_display_color_property2/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property2")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("%type:Mesh")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property2/separatedestprimpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property2")
    hou_parm = hou_node.parm("separatedestprimpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property2/destprimpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property2")
    hou_parm = hou_node.parm("destprimpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property2/propertycopycount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property2")
    hou_parm = hou_node.parm("propertycopycount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property2/sourceprop1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property2")
    hou_parm = hou_node.parm("sourceprop1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("primvars:displayColor")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property2/destprop1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property2")
    hou_parm = hou_node.parm("destprop1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("primvars:displayColor")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property2/copymetadata1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property2")
    hou_parm = hou_node.parm("copymetadata1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property2/blocksource1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property2")
    hou_parm = hou_node.parm("blocksource1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3
    hou_node = hou_parent.createNode("attribwrangle", "set_paylod_bbox_color3", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(31.2517, -27.7546))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("sample_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_behavior parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("sample_behavior")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("single")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_f parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm_tuple = hou_node.parmTuple("sample_f")
    hou_parm_tuple.lock((False, False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((1, 240, 1))
    hou_parm_tuple.setAutoscope((False, False, False))

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fstart", hou.exprLanguage.Hscript)
    hou_parm_tuple[0].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@fend", hou.exprLanguage.Hscript)
    hou_parm_tuple[1].setKeyframe(hou_keyframe)

    # Code for first keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for last keyframe.
    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)

    # Code for keyframe.
    hou_keyframe = hou.Keyframe()
    hou_keyframe.setTime(0)
    hou_keyframe.setValue(0)
    hou_keyframe.useValue(False)
    hou_keyframe.setSlope(0)
    hou_keyframe.useSlope(False)
    hou_keyframe.setAccel(0)
    hou_keyframe.useAccel(False)
    hou_keyframe.setExpression("@finc", hou.exprLanguage.Hscript)
    hou_parm_tuple[2].setKeyframe(hou_keyframe)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_subframeenable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("sample_subframeenable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_subframegroup parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("sample_subframegroup")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_shuttermode parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("sample_shuttermode")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("manual")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_shutterrange parm tuple
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm_tuple = hou_node.parmTuple("sample_shutterrange")
    hou_parm_tuple.lock((False, False))
    hou_parm_tuple.deleteAllKeyframes()
    hou_parm_tuple.set((-0.25, 0.25))
    hou_parm_tuple.setAutoscope((False, False))


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_cameraprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("sample_cameraprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/cameras/camera1")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_count parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("sample_count")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(2)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/sample_includeframe parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("sample_includeframe")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/allowinstanceproxies parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("allowinstanceproxies")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/runonarrays parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("runonarrays")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/lengthhint parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("lengthhint")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("auto")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/lengthattrib parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("lengthattrib")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/folder01 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("folder01")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/snippet parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("snippet")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("vector drawColor = usd_attribelement(0, @primpath, \"primvars:displayColor\", 0);\nusd_setattrib(0, @primpath, \"model:drawModeColor\", drawColor);")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/exportlist parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("exportlist")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/strict parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("strict")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/autobind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("autobind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/bindings parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("bindings")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/vex_cwdpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("vex_cwdpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(".")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/set_paylod_bbox_color3/vex_outputmask parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/set_paylod_bbox_color3")
    hou_parm = hou_node.parm("vex_outputmask")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("*")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("")
    # Code for /stage/componentoutput_custom/copy_display_color_property3
    hou_node = hou_parent.createNode("copyproperty", "copy_display_color_property3", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(31.2547, -26.9329))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/copy_display_color_property3/primpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property3")
    hou_parm = hou_node.parm("primpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("%type:Mesh")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property3/separatedestprimpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property3")
    hou_parm = hou_node.parm("separatedestprimpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property3/destprimpattern parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property3")
    hou_parm = hou_node.parm("destprimpattern")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("`chs(\"../rootprim\")`")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property3/propertycopycount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property3")
    hou_parm = hou_node.parm("propertycopycount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property3/sourceprop1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property3")
    hou_parm = hou_node.parm("sourceprop1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("primvars:displayColor")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property3/destprop1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property3")
    hou_parm = hou_node.parm("destprop1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("primvars:displayColor")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property3/copymetadata1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property3")
    hou_parm = hou_node.parm("copymetadata1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/copy_display_color_property3/blocksource1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/copy_display_color_property3")
    hou_parm = hou_node.parm("blocksource1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/null1
    hou_node = hou_parent.createNode("null", "null1", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-11.1539, -22.6826))
    hou_node.hide(False)
    hou_node.setSelected(False)
    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code for /stage/componentoutput_custom/reference2
    hou_node = hou_parent.createNode("reference::2.0", "reference2", run_init_scripts=False, load_contents=True, exact_type_name=True)
    hou_node.move(hou.Vector2(-11.8466, -11.4822))
    hou_node.hide(False)
    hou_node.setSelected(False)

    # Code for /stage/componentoutput_custom/reference2/main_switcher1 parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("main_switcher1")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/enable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("enable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/input_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("input_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/primpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("primpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("/ASSET")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/createprims parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("createprims")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("on")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/primcount parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("primcount")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/reftype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("reftype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("file")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/instanceable parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("instanceable")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/refprim parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("refprim")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/refprimpath parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("refprimpath")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("automaticPrim")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/files_group parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("files_group")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(1)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/num_files parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("num_files")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set(0)
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/reload parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("reload")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("0")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/primkind parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("primkind")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/parentprimtype parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("parentprimtype")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("UsdGeomXform")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/handlemissingfiles parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("handlemissingfiles")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("error")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/preop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("preop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("none")
    hou_parm.setAutoscope(False)


    # Code for /stage/componentoutput_custom/reference2/refeditop parm
    if locals().get("hou_node") is None:
        hou_node = hou.node(f"/stage/{node_name}/reference2")
    hou_parm = hou_node.parm("refeditop")
    hou_parm.lock(False)
    hou_parm.deleteAllKeyframes()
    hou_parm.set("prependfront")
    hou_parm.setAutoscope(False)


    hou_node.setExpressionLanguage(hou.exprLanguage.Hscript)

    hou_node.setUserData("___Version___", "21.0.440")
    if hasattr(hou_node, "syncNodeVersionIfNeeded"):
        hou_node.syncNodeVersionIfNeeded("21.0.440")
    # Update the parent node.
    hou_parent = hou_node


    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()

    # Code to establish connections for /stage/componentoutput_custom/OUT
    hou_node = hou_parent.node("OUT")
    if hou_parent.node("output_switch") is not None:
        hou_node.setInput(0, hou_parent.node("output_switch"), 0)
    # Code to establish connections for /stage/componentoutput_custom/asset_layer
    hou_node = hou_parent.node("asset_layer")
    if hou_parent.node("graft_second_input_temp") is not None:
        hou_node.setInput(0, hou_parent.node("graft_second_input_temp"), 0)
    # Code to establish connections for /stage/componentoutput_custom/output_switch
    hou_node = hou_parent.node("output_switch")
    if hou_parent.node("asset_layer") is not None:
        hou_node.setInput(0, hou_parent.node("asset_layer"), 0)
    if hou_parent.node("from_disk") is not None:
        hou_node.setInput(1, hou_parent.node("from_disk"), 0)
    # Code to establish connections for /stage/componentoutput_custom/source_mode
    hou_node = hou_parent.node("source_mode")
    if hou_parent.node("set_default_variants") is not None:
        hou_node.setInput(0, hou_parent.node("set_default_variants"), 0)
    if hou_parent.node("has_geo_variants") is not None:
        hou_node.setInput(1, hou_parent.node("has_geo_variants"), 0)
    if hou_parent.node("set_paylod_bbox_color3") is not None:
        hou_node.setInput(2, hou_parent.node("set_paylod_bbox_color3"), 0)
    # Code to establish connections for /stage/componentoutput_custom/configure_geo_layer
    hou_node = hou_parent.node("configure_geo_layer")
    if hou_parent.node("clear_the_geo_variant_selection") is not None:
        hou_node.setInput(0, hou_parent.node("clear_the_geo_variant_selection"), 0)
    # Code to establish connections for /stage/componentoutput_custom/configure_mtl_layer
    hou_node = hou_parent.node("configure_mtl_layer")
    if hou_parent.node("clear_the_mtl_variant_selection") is not None:
        hou_node.setInput(0, hou_parent.node("clear_the_mtl_variant_selection"), 0)
    # Code to establish connections for /stage/componentoutput_custom/loftpayloadinfo1
    hou_node = hou_parent.node("loftpayloadinfo1")
    if hou_parent.node("layerbreak") is not None:
        hou_node.setInput(0, hou_parent.node("layerbreak"), 0)
    # Code to establish connections for /stage/componentoutput_custom/manual_prim
    hou_node = hou_parent.node("manual_prim")
    if hou_parent.node("payload_input") is not None:
        hou_node.setInput(0, hou_parent.node("payload_input"), 0)
    # Code to establish connections for /stage/componentoutput_custom/default_variants
    hou_node = hou_parent.node("default_variants")
    if hou_parent.node("has_geo_variants") is not None:
        hou_node.setInput(0, hou_parent.node("has_geo_variants"), 0)
    # Code to establish connections for /stage/componentoutput_custom/payload
    hou_node = hou_parent.node("payload")
    if hou_parent.node("root_component_prim") is not None:
        hou_node.setInput(0, hou_parent.node("root_component_prim"), 0)
    if hou_parent.node("configure_payload_layer") is not None:
        hou_node.setInput(1, hou_parent.node("configure_payload_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/setup_class_prim
    hou_node = hou_parent.node("setup_class_prim")
    if hou_parent.node("source_mode") is not None:
        hou_node.setInput(0, hou_parent.node("source_mode"), 0)
    if hou_parent.node("reference1") is not None:
        hou_node.setInput(1, hou_parent.node("reference1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/has_geo_variants
    hou_node = hou_parent.node("has_geo_variants")
    if hou_parent.node("set_paylod_bbox_color") is not None:
        hou_node.setInput(0, hou_parent.node("set_paylod_bbox_color"), 0)
    if hou_parent.node("foreach_geo_variant_loft_payload_end") is not None:
        hou_node.setInput(1, hou_parent.node("foreach_geo_variant_loft_payload_end"), 0)
    # Code to establish connections for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_begin
    hou_node = hou_parent.node("foreach_geo_variant_loft_payload_begin")
    if hou_parent.node("null1") is not None:
        hou_node.setInput(0, hou_parent.node("null1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/foreach_geo_variant_loft_payload_end
    hou_node = hou_parent.node("foreach_geo_variant_loft_payload_end")
    if hou_parent.node("null1") is not None:
        hou_node.setInput(0, hou_parent.node("null1"), 0)
    if hou_parent.node("variant_payloadinfo") is not None:
        hou_node.setInput(2, hou_parent.node("variant_payloadinfo"), 0)
    # Code to establish connections for /stage/componentoutput_custom/setvariant
    hou_node = hou_parent.node("setvariant")
    if hou_parent.node("foreach_geo_variant_loft_payload_begin") is not None:
        hou_node.setInput(0, hou_parent.node("foreach_geo_variant_loft_payload_begin"), 0)
    # Code to establish connections for /stage/componentoutput_custom/layerbreak
    hou_node = hou_parent.node("layerbreak")
    if hou_parent.node("setvariant") is not None:
        hou_node.setInput(0, hou_parent.node("setvariant"), 0)
    # Code to establish connections for /stage/componentoutput_custom/class_prim
    hou_node = hou_parent.node("class_prim")
    if hou_parent.node("source_mode") is not None:
        hou_node.setInput(0, hou_parent.node("source_mode"), 0)
    # Code to establish connections for /stage/componentoutput_custom/reference1
    hou_node = hou_parent.node("reference1")
    if hou_parent.node("class_prim") is not None:
        hou_node.setInput(0, hou_parent.node("class_prim"), 0)
    # Code to establish connections for /stage/componentoutput_custom/extras
    hou_node = hou_parent.node("extras")
    if hou_parent.node("layerbreak2") is not None:
        hou_node.setInput(0, hou_parent.node("layerbreak2"), 0)
    # Code to establish connections for /stage/componentoutput_custom/layerbreak2
    hou_node = hou_parent.node("layerbreak2")
    if hou_parent.node("switch_ref_point") is not None:
        hou_node.setInput(0, hou_parent.node("switch_ref_point"), 0)
    # Code to establish connections for /stage/componentoutput_custom/extras_layer
    hou_node = hou_parent.node("extras_layer")
    if hou_parent.node("extras") is not None:
        hou_node.setInput(0, hou_parent.node("extras"), 0)
    # Code to establish connections for /stage/componentoutput_custom/add_extras_layer
    hou_node = hou_parent.node("add_extras_layer")
    if hou_parent.node("reference_geo_and_mtl_layers") is not None:
        hou_node.setInput(0, hou_parent.node("reference_geo_and_mtl_layers"), 0)
    if hou_parent.node("reference_extras") is not None:
        hou_node.setInput(1, hou_parent.node("reference_extras"), 0)
    # Code to establish connections for /stage/componentoutput_custom/setup_asset_info_metadata
    hou_node = hou_parent.node("setup_asset_info_metadata")
    if hou_parent.node("setup_class_prim") is not None:
        hou_node.setInput(0, hou_parent.node("setup_class_prim"), 0)
    # Code to establish connections for /stage/componentoutput_custom/IN
    hou_node = hou_parent.node("IN")
    if len(hou_parent.indirectInputs()) > 0:
        hou_node.setInput(0, hou_parent.indirectInputs()[0])
    # Code to establish connections for /stage/componentoutput_custom/payload_input_primitives
    hou_node = hou_parent.node("payload_input_primitives")
    if hou_parent.node("manual_prim") is not None:
        hou_node.setInput(0, hou_parent.node("manual_prim"), 0)
    if hou_parent.node("manual_payload") is not None:
        hou_node.setInput(1, hou_parent.node("manual_payload"), 0)
    # Code to establish connections for /stage/componentoutput_custom/manual_payload
    hou_node = hou_parent.node("manual_payload")
    if hou_parent.node("manual_prim") is not None:
        hou_node.setInput(0, hou_parent.node("manual_prim"), 0)
    if hou_parent.node("configure_manual_payload") is not None:
        hou_node.setInput(1, hou_parent.node("configure_manual_payload"), 0)
    # Code to establish connections for /stage/componentoutput_custom/manual_loftpayloadinfo_extentsHints
    hou_node = hou_parent.node("manual_loftpayloadinfo_extentsHints")
    if hou_parent.node("payload_input_primitives") is not None:
        hou_node.setInput(0, hou_parent.node("payload_input_primitives"), 0)
    # Code to establish connections for /stage/componentoutput_custom/configure_manual_payload
    hou_node = hou_parent.node("configure_manual_payload")
    if hou_parent.node("manual_add_extras_layer") is not None:
        hou_node.setInput(0, hou_parent.node("manual_add_extras_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/payload_input
    hou_node = hou_parent.node("payload_input")
    if hou_parent.node("IN") is not None:
        hou_node.setInput(0, hou_parent.node("IN"), 0)
    if hou_parent.node("null") is not None:
        hou_node.setInput(1, hou_parent.node("null"), 0)
    # Code to establish connections for /stage/componentoutput_custom/loftpayloadinfo
    hou_node = hou_parent.node("loftpayloadinfo")
    if hou_parent.node("null1") is not None:
        hou_node.setInput(0, hou_parent.node("null1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/rename_ASSET_mtls
    hou_node = hou_parent.node("rename_ASSET_mtls")
    if hou_parent.node("ensure_root_prim_exists_mtls") is not None:
        hou_node.setInput(0, hou_parent.node("ensure_root_prim_exists_mtls"), 0)
    # Code to establish connections for /stage/componentoutput_custom/rename_ASSET_geo
    hou_node = hou_parent.node("rename_ASSET_geo")
    if hou_parent.node("ensure_root_prim_exists_geo") is not None:
        hou_node.setInput(0, hou_parent.node("ensure_root_prim_exists_geo"), 0)
    # Code to establish connections for /stage/componentoutput_custom/cleanup_files_and_update_thumbnail
    hou_node = hou_parent.node("cleanup_files_and_update_thumbnail")
    if hou_parent.node("set_layer_metadata") is not None:
        hou_node.setInput(0, hou_parent.node("set_layer_metadata"), 0)
    # Code to establish connections for /stage/componentoutput_custom/set_default_variants
    hou_node = hou_parent.node("set_default_variants")
    if hou_parent.node("has_geo_variants") is not None:
        hou_node.setInput(0, hou_parent.node("has_geo_variants"), 0)
    if hou_parent.node("default_variants") is not None:
        hou_node.setInput(1, hou_parent.node("default_variants"), 0)
    # Code to establish connections for /stage/componentoutput_custom/reference_geo_and_mtl_layers
    hou_node = hou_parent.node("reference_geo_and_mtl_layers")
    if hou_parent.node("root_component_prim") is not None:
        hou_node.setInput(0, hou_parent.node("root_component_prim"), 0)
    if hou_parent.node("configure_geo_layer") is not None:
        hou_node.setInput(1, hou_parent.node("configure_geo_layer"), 0)
    if hou_parent.node("configure_mtl_layer") is not None:
        hou_node.setInput(2, hou_parent.node("configure_mtl_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/reference_extras
    hou_node = hou_parent.node("reference_extras")
    if hou_parent.node("reference_geo_and_mtl_layers") is not None:
        hou_node.setInput(0, hou_parent.node("reference_geo_and_mtl_layers"), 0)
    if hou_parent.node("extras_layer") is not None:
        hou_node.setInput(1, hou_parent.node("extras_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/configure_payload_layer
    hou_node = hou_parent.node("configure_payload_layer")
    if hou_parent.node("add_extras_layer") is not None:
        hou_node.setInput(0, hou_parent.node("add_extras_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/variant_payloadinfo
    hou_node = hou_parent.node("variant_payloadinfo")
    if hou_parent.node("set_paylod_bbox_color1") is not None:
        hou_node.setInput(1, hou_parent.node("set_paylod_bbox_color1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/auto_thumbnail_camera
    hou_node = hou_parent.node("auto_thumbnail_camera")
    if hou_parent.node("set_layer_metadata") is not None:
        hou_node.setInput(0, hou_parent.node("set_layer_metadata"), 0)
    # Code to establish connections for /stage/componentoutput_custom/THUMBNAIL
    hou_node = hou_parent.node("THUMBNAIL")
    if hou_parent.node("use_second_input") is not None:
        hou_node.setInput(0, hou_parent.node("use_second_input"), 0)
    # Code to establish connections for /stage/componentoutput_custom/rop
    hou_node = hou_parent.node("rop")
    if hou_parent.node("cleanup_files_and_update_thumbnail") is not None:
        hou_node.setInput(0, hou_parent.node("cleanup_files_and_update_thumbnail"), 0)
    # Code to establish connections for /stage/componentoutput_custom/switch_ref_point
    hou_node = hou_parent.node("switch_ref_point")
    if hou_parent.node("reference_geo_and_mtl_layers") is not None:
        hou_node.setInput(0, hou_parent.node("reference_geo_and_mtl_layers"), 0)
    if hou_parent.node("fetch_IN_ref") is not None:
        hou_node.setInput(1, hou_parent.node("fetch_IN_ref"), 0)
    if hou_parent.node("fetch_SceneImport_ref") is not None:
        hou_node.setInput(2, hou_parent.node("fetch_SceneImport_ref"), 0)
    # Code to establish connections for /stage/componentoutput_custom/manual_add_extras_layer
    hou_node = hou_parent.node("manual_add_extras_layer")
    if hou_parent.node("IN") is not None:
        hou_node.setInput(0, hou_parent.node("IN"), 0)
    if hou_parent.node("reference2") is not None:
        hou_node.setInput(1, hou_parent.node("reference2"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_msg
    hou_node = hou_parent.node("si_msg")
    if hou_parent.node("fetch_IN") is not None:
        hou_node.setInput(0, hou_parent.node("fetch_IN"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_remove_old_payload
    hou_node = hou_parent.node("si_remove_old_payload")
    if hou_parent.node("si_input") is not None:
        hou_node.setInput(0, hou_parent.node("si_input"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_configure_geo_layer
    hou_node = hou_parent.node("si_configure_geo_layer")
    if hou_parent.node("si_sublayer_sop_geo") is not None:
        hou_node.setInput(0, hou_parent.node("si_sublayer_sop_geo"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_configure_mtl_layer
    hou_node = hou_parent.node("si_configure_mtl_layer")
    if hou_parent.node("si_remove_old_payload") is not None:
        hou_node.setInput(0, hou_parent.node("si_remove_old_payload"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_reference_geo_and_mtl_layers
    hou_node = hou_parent.node("si_reference_geo_and_mtl_layers")
    if hou_parent.node("si_root_component_prim") is not None:
        hou_node.setInput(0, hou_parent.node("si_root_component_prim"), 0)
    if hou_parent.node("si_configure_geo_layer") is not None:
        hou_node.setInput(1, hou_parent.node("si_configure_geo_layer"), 0)
    if hou_parent.node("si_configure_mtl_layer") is not None:
        hou_node.setInput(2, hou_parent.node("si_configure_mtl_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_reference_extras
    hou_node = hou_parent.node("si_reference_extras")
    if hou_parent.node("si_reference_geo_and_mtl_layers") is not None:
        hou_node.setInput(0, hou_parent.node("si_reference_geo_and_mtl_layers"), 0)
    if hou_parent.node("si_fetch_extras_layer") is not None:
        hou_node.setInput(1, hou_parent.node("si_fetch_extras_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_payload
    hou_node = hou_parent.node("si_payload")
    if hou_parent.node("si_root_component_prim") is not None:
        hou_node.setInput(0, hou_parent.node("si_root_component_prim"), 0)
    if hou_parent.node("si_configure_payload_layer") is not None:
        hou_node.setInput(1, hou_parent.node("si_configure_payload_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_add_extras_layer
    hou_node = hou_parent.node("si_add_extras_layer")
    if hou_parent.node("si_reference_geo_and_mtl_layers") is not None:
        hou_node.setInput(0, hou_parent.node("si_reference_geo_and_mtl_layers"), 0)
    if hou_parent.node("si_reference_extras") is not None:
        hou_node.setInput(1, hou_parent.node("si_reference_extras"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_configure_payload_layer
    hou_node = hou_parent.node("si_configure_payload_layer")
    if hou_parent.node("si_add_extras_layer") is not None:
        hou_node.setInput(0, hou_parent.node("si_add_extras_layer"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_loftpayloadinfo
    hou_node = hou_parent.node("si_loftpayloadinfo")
    if hou_parent.node("si_payload") is not None:
        hou_node.setInput(0, hou_parent.node("si_payload"), 0)
    # Code to establish connections for /stage/componentoutput_custom/si_input
    hou_node = hou_parent.node("si_input")
    if hou_parent.node("si_msg") is not None:
        hou_node.setInput(0, hou_parent.node("si_msg"), 0)
    # Code to establish connections for /stage/componentoutput_custom/strip_composition_arcs
    hou_node = hou_parent.node("strip_composition_arcs")
    if len(hou_parent.indirectInputs()) > 0:
        hou_node.setInput(0, hou_parent.indirectInputs()[0])
    # Code to establish connections for /stage/componentoutput_custom/remove_geo_variant
    hou_node = hou_parent.node("remove_geo_variant")
    if hou_parent.node("strip_composition_arcs") is not None:
        hou_node.setInput(0, hou_parent.node("strip_composition_arcs"), 0)
    # Code to establish connections for /stage/componentoutput_custom/remove_mtl_variant
    hou_node = hou_parent.node("remove_mtl_variant")
    if hou_parent.node("remove_geo_variant") is not None:
        hou_node.setInput(0, hou_parent.node("remove_geo_variant"), 0)
    # Code to establish connections for /stage/componentoutput_custom/isolate_root_prim
    hou_node = hou_parent.node("isolate_root_prim")
    if hou_parent.node("remove_mtl_variant") is not None:
        hou_node.setInput(0, hou_parent.node("remove_mtl_variant"), 0)
    # Code to establish connections for /stage/componentoutput_custom/rename_root_prim
    hou_node = hou_parent.node("rename_root_prim")
    if hou_parent.node("isolate_root_prim") is not None:
        hou_node.setInput(0, hou_parent.node("isolate_root_prim"), 0)
    # Code to establish connections for /stage/componentoutput_custom/msg
    hou_node = hou_parent.node("msg")
    if hou_parent.node("fetch_geo") is not None:
        hou_node.setInput(0, hou_parent.node("fetch_geo"), 0)
    # Code to establish connections for /stage/componentoutput_custom/ensure_root_prim_exists_mtls
    hou_node = hou_parent.node("ensure_root_prim_exists_mtls")
    if hou_parent.node("fetch_mtls") is not None:
        hou_node.setInput(0, hou_parent.node("fetch_mtls"), 0)
    # Code to establish connections for /stage/componentoutput_custom/ensure_root_prim_exists_geo
    hou_node = hou_parent.node("ensure_root_prim_exists_geo")
    if hou_parent.node("msg") is not None:
        hou_node.setInput(0, hou_parent.node("msg"), 0)
    # Code to establish connections for /stage/componentoutput_custom/set_layer_metadata
    hou_node = hou_parent.node("set_layer_metadata")
    if hou_parent.node("setup_asset_info_metadata") is not None:
        hou_node.setInput(0, hou_parent.node("setup_asset_info_metadata"), 0)
    # Code to establish connections for /stage/componentoutput_custom/use_second_input
    hou_node = hou_parent.node("use_second_input")
    if hou_parent.node("add_thumbnail_files") is not None:
        hou_node.setInput(0, hou_parent.node("add_thumbnail_files"), 0)
    if hou_parent.node("graft_second_input_temp") is not None:
        hou_node.setInput(1, hou_parent.node("graft_second_input_temp"), 0)
    # Code to establish connections for /stage/componentoutput_custom/graft_second_input_for_export
    hou_node = hou_parent.node("graft_second_input_for_export")
    if hou_parent.node("reference_asset") is not None:
        hou_node.setInput(0, hou_parent.node("reference_asset"), 0)
    if len(hou_parent.indirectInputs()) > 1:
        hou_node.setInput(1, hou_parent.indirectInputs()[1])
    # Code to establish connections for /stage/componentoutput_custom/save_thumbnail_scene
    hou_node = hou_parent.node("save_thumbnail_scene")
    if hou_parent.node("use_second_input_export") is not None:
        hou_node.setInput(0, hou_parent.node("use_second_input_export"), 0)
    # Code to establish connections for /stage/componentoutput_custom/use_second_input_export
    hou_node = hou_parent.node("use_second_input_export")
    if hou_parent.node("auto_thumbnail_camera_for_export") is not None:
        hou_node.setInput(0, hou_parent.node("auto_thumbnail_camera_for_export"), 0)
    if hou_parent.node("graft_second_input_for_export") is not None:
        hou_node.setInput(1, hou_parent.node("graft_second_input_for_export"), 0)
    # Code to establish connections for /stage/componentoutput_custom/auto_thumbnail_camera_for_export
    hou_node = hou_parent.node("auto_thumbnail_camera_for_export")
    if hou_parent.node("reference_asset") is not None:
        hou_node.setInput(0, hou_parent.node("reference_asset"), 0)
    # Code to establish connections for /stage/componentoutput_custom/graft_second_input_temp
    hou_node = hou_parent.node("graft_second_input_temp")
    if hou_parent.node("auto_thumbnail_camera") is not None:
        hou_node.setInput(0, hou_parent.node("auto_thumbnail_camera"), 0)
    if len(hou_parent.indirectInputs()) > 1:
        hou_node.setInput(1, hou_parent.indirectInputs()[1])
    # Code to establish connections for /stage/componentoutput_custom/__thumbnail_scene
    hou_node = hou_parent.node("__thumbnail_scene")
    if len(hou_parent.indirectInputs()) > 1:
        hou_node.setInput(0, hou_parent.indirectInputs()[1])
    # Code to establish connections for /stage/componentoutput_custom/clear_the_geo_variant_selection
    hou_node = hou_parent.node("clear_the_geo_variant_selection")
    if hou_parent.node("rename_ASSET_geo") is not None:
        hou_node.setInput(0, hou_parent.node("rename_ASSET_geo"), 0)
    # Code to establish connections for /stage/componentoutput_custom/clear_the_mtl_variant_selection
    hou_node = hou_parent.node("clear_the_mtl_variant_selection")
    if hou_parent.node("ensure_root_xform_prim") is not None:
        hou_node.setInput(0, hou_parent.node("ensure_root_xform_prim"), 0)
    # Code to establish connections for /stage/componentoutput_custom/ensure_root_xform_prim
    hou_node = hou_parent.node("ensure_root_xform_prim")
    if hou_parent.node("rename_ASSET_mtls") is not None:
        hou_node.setInput(0, hou_parent.node("rename_ASSET_mtls"), 0)
    # Code to establish connections for /stage/componentoutput_custom/thumbnail_render
    hou_node = hou_parent.node("thumbnail_render")
    if hou_parent.node("THUMBNAIL") is not None:
        hou_node.setInput(0, hou_parent.node("THUMBNAIL"), 0)
    # Code to establish connections for /stage/componentoutput_custom/add_thumbnail_files
    hou_node = hou_parent.node("add_thumbnail_files")
    if hou_parent.node("auto_thumbnail_camera") is not None:
        hou_node.setInput(0, hou_parent.node("auto_thumbnail_camera"), 0)
    # Code to establish connections for /stage/componentoutput_custom/copy_display_color_property
    hou_node = hou_parent.node("copy_display_color_property")
    if hou_parent.node("loftpayloadinfo") is not None:
        hou_node.setInput(0, hou_parent.node("loftpayloadinfo"), 0)
    # Code to establish connections for /stage/componentoutput_custom/set_paylod_bbox_color
    hou_node = hou_parent.node("set_paylod_bbox_color")
    if hou_parent.node("copy_display_color_property") is not None:
        hou_node.setInput(0, hou_parent.node("copy_display_color_property"), 0)
    # Code to establish connections for /stage/componentoutput_custom/set_paylod_bbox_color1
    hou_node = hou_parent.node("set_paylod_bbox_color1")
    if hou_parent.node("copy_display_color_property1") is not None:
        hou_node.setInput(0, hou_parent.node("copy_display_color_property1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/copy_display_color_property1
    hou_node = hou_parent.node("copy_display_color_property1")
    if hou_parent.node("loftpayloadinfo1") is not None:
        hou_node.setInput(0, hou_parent.node("loftpayloadinfo1"), 0)
    # Code to establish connections for /stage/componentoutput_custom/set_paylod_bbox_color2
    hou_node = hou_parent.node("set_paylod_bbox_color2")
    if hou_parent.node("copy_display_color_property2") is not None:
        hou_node.setInput(0, hou_parent.node("copy_display_color_property2"), 0)
    # Code to establish connections for /stage/componentoutput_custom/copy_display_color_property2
    hou_node = hou_parent.node("copy_display_color_property2")
    if hou_parent.node("manual_loftpayloadinfo_extentsHints") is not None:
        hou_node.setInput(0, hou_parent.node("manual_loftpayloadinfo_extentsHints"), 0)
    # Code to establish connections for /stage/componentoutput_custom/set_paylod_bbox_color3
    hou_node = hou_parent.node("set_paylod_bbox_color3")
    if hou_parent.node("copy_display_color_property3") is not None:
        hou_node.setInput(0, hou_parent.node("copy_display_color_property3"), 0)
    # Code to establish connections for /stage/componentoutput_custom/copy_display_color_property3
    hou_node = hou_parent.node("copy_display_color_property3")
    if hou_parent.node("si_loftpayloadinfo") is not None:
        hou_node.setInput(0, hou_parent.node("si_loftpayloadinfo"), 0)
    # Code to establish connections for /stage/componentoutput_custom/null1
    hou_node = hou_parent.node("null1")
    if hou_parent.node("payload_input_primitives") is not None:
        hou_node.setInput(0, hou_parent.node("payload_input_primitives"), 0)
    # Code to establish connections for /stage/componentoutput_custom/reference2
    hou_node = hou_parent.node("reference2")
    if hou_parent.node("IN") is not None:
        hou_node.setInput(0, hou_parent.node("IN"), 0)
    if hou_parent.node("fetch_extras_layer") is not None:
        hou_node.setInput(1, hou_parent.node("fetch_extras_layer"), 0)
    # Restore the parent and current nodes.
    hou_parent = hou_parent.parent()
    hou_node = hou_node.parent()
    return hou_node


